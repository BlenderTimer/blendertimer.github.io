<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="880.84021"
   height="264.67261"
   viewBox="0 0 880.84021 264.67261"
   version="1.1"
   id="svg1"
   sodipodi:docname="Bowhead_Whale-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.48657718"
     inkscape:cx="440.83448"
     inkscape:cy="133.58621"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 399.99517,0.93700322 c -19.358,1.52799998 -36.261,4.02699998 -74.202,10.96999978 -20.737,3.795 -43.237,7.414 -50,8.042 -15.173,1.41 -50.389,0.493 -66.093,-1.72 -6.378,-0.899 -15.307,-1.422 -20.726,-1.213 -9.156,0.352 -9.904,0.561 -19.5,5.451 -5.488,2.796 -21.583,10.996 -35.766,18.22 -55.322996,28.182 -103.405996,57.36 -114.166996,69.281997 -3.152,3.491 -6.735,9.372 -10.2740001,16.861 -2.988,6.325 -6.297,13.164 -7.353,15.198 -3.492,6.729 -2.184,13.37 3.742,18.999 3.718,3.532 7.9940001,5.229 18.3390001,7.276 4.675,0.925 12.55,2.763 17.5,4.084 4.95,1.321 19.35,3.998 32,5.949 12.65,1.951 26.824996,4.186 31.499996,4.967 14.327,2.394 33.427,4.384 57.5,5.991 27.23,1.819 95.559,4.538 113.973,4.537 l 12.974,-10e-4 5.558,5.842 c 14.815,15.568 35.806,26.113 65.185,32.745 14.065,3.175 26.564,4.172 30.721,2.45 5.08,-2.104 4.996,-5.586 -0.32,-13.345 -3.862,-5.637 -6.151,-10.585 -7.489,-16.192 -0.656,-2.75 -1.412,-5.74 -1.681,-6.644 -0.432,-1.455 1.215,-1.717 14.295,-2.269 57.925,-2.444 96.155,-5.895 134.761,-12.165 11.563,-1.878 25.973,-3.89 32.023,-4.471 6.05,-0.58 17.682,-1.995 25.849,-3.143 12.682,-1.782 17.864,-2.004 35.5,-1.521 26.234,0.718 50.026,3.665 66.651,8.257 16.057,4.435 48.288,6.238 64.2,3.591 l 8.2,-1.364 22.8,21.503 c 43.635,41.151 51.57,46.786 77.003,54.684 12.491,3.879 17.646,3.848 18.104,-0.106 0.255,-2.204 -0.681,-3.408 -5.589,-7.184 -11.361,-8.743 -13.97,-12.859 -20.816,-32.846 -6.064,-17.703 -10.297,-25.717 -17.262,-32.682 -5.342,-5.342 -5.648,-5.882 -3.803,-6.724 3.818,-1.743 5.666,-5.677 6.628,-14.107 1.099,-9.642 2.206,-11.789 7.481,-14.512 3.636,-1.877 3.804,-2.141 2.138,-3.359 -4.989,-3.649 -30.181,-3.042 -46.584,1.121 -6.311,1.602 -14.565,2.871 -20.689,3.181 l -10.189,0.517 -3.168,-3.379 c -6.335,-6.755 -17.775,-21.612 -24.31,-31.57 -7.886,-12.015 -12.762,-16.427 -29.144,-26.369997 -6.6,-4.005 -18.525,-12.112 -26.501,-18.014 -39.358,-29.128 -77.527,-46.492 -132.499,-60.278 -26.099,-6.5449998 -58.959,-11.2639998 -101.895,-14.63399978 -14.765,-1.159 -39.26,-1.116 -54.605,0.095"
     stroke="none"
     fill="#3d515a"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
