<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="815.599"
   height="273.83054"
   viewBox="0 0 815.599 273.83054"
   version="1.1"
   id="svg1"
   sodipodi:docname="Thecodontosaurus_Antiquus-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.52984166"
     inkscape:cx="408.61264"
     inkscape:cy="137.77701"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 41.990416,0.17172058 c -6.787,0.90200002 -17.19,5.76600002 -29.503,13.79100042 -6.2450002,4.071 -9.0640002,6.604 -10.5150002,9.448 -2.01799999,3.956 -2.60399999,8.463 -1.21199999,9.323 0.42399999,0.262 4.36199999,-0.383 8.74999999,-1.433 9.4760002,-2.267 13.4400002,-2.406 15.9660002,-0.559 1.669,1.22 1.728,1.703 0.554,4.537 -0.722,1.744 -3.791,5.344 -6.819,8 -3.235,2.838 -5.216,5.296 -4.804,5.963 0.386,0.624 2.866,1.134 5.511,1.134 4.102,0 5.545,-0.585 9.796,-3.97 6.911,-5.502 8.825,-6.03 21.87,-6.03 10.843,0 11.799,0.169 17.685,3.124 10.739,5.392 25.458,14.843 35.016004,22.484 5.063,4.047 12.19,8.937 15.838,10.868 6.972,3.689 7.528,4.418 11.853,15.524 2.749,7.062 10.289,14.778999 22.604,23.134999 5.159,3.501 9.389,6.815 9.398,7.365 0.027,1.515 -4.992,13.235 -8.564,20 -2.198,4.164 -5.426,7.964 -10.546,12.416 -8.203,7.133 -9.767,9.643 -9.833,15.775 -0.063,5.863 1.395,6.121 4.513,0.8 1.47,-2.507 3.99,-5.24 5.602,-6.074 l 2.931,-1.515 -2.157,4.227 c -1.642,3.219 -2.016,5.255 -1.568,8.528 1.07,7.803 4.562,10.822 6.472,5.593 0.873,-2.392 1.014,-2.468 1.083,-0.582 0.247,6.793 3.672,7.227 4.667,0.592 0.865,-5.764 6.026,-17.616 7.323,-16.815 0.514,0.318 1.229,1.918 1.589,3.555 1.435,6.534 4.46,4.421 4.485,-3.133 0.013,-3.882 0.361,-4.724 2.147,-5.191 1.682,-0.44 1.99,-1.046 1.461,-2.867 -2.165,-7.452 -2.008,-8.128 4.947,-21.273 8.056,-15.227 8.922,-15.019 8.271,1.985 -0.39,10.179 -0.737,11.879 -3.596,17.622 -1.741,3.497 -5.426,8.981 -8.19,12.188 -5.104,5.923 -6.039,8.906 -3.99,12.735 1.32,2.465 2.965,2.496 2.965,0.055 0,-1.039 2.445,-3.967 5.476,-6.556 l 5.475,-4.678 -1.475,4.182 c -2.571,7.287 -1.504,15.931 1.966,15.931 0.785,0 1.207,-0.748 0.988,-1.75 -0.21,-0.963 0.935,-4.45 2.544,-7.75 l 2.926,-6 -0.572,5.195 c -0.615,5.593 0.249,12.305 1.584,12.305 1.395,0 5.116,-10.127 6.337,-17.249 l 1.161,-6.769 2.135,2.677 c 1.317,1.652 2.722,2.452 3.667,2.09 1.289,-0.495 1.371,-1.4 0.52,-5.706 -0.899,-4.548 -0.801,-5.274 0.878,-6.522 1.592,-1.182 1.689,-1.689 0.62,-3.212 -0.699,-0.995 -1.991,-3.384 -2.871,-5.309 -1.99,-4.349 -1.335,-13.627 1.611,-22.833 1.13,-3.531 1.758,-7.403 1.42,-8.75 -0.845,-3.367 0.25,-3.205 15.785,2.333 13.082,4.663 13.553,4.752 25.825,4.842 15.919,0.116 15,-0.09 15,3.365 0,5.371 6.798,29.598 12.399,44.19 7.07,18.421 7.558,20.791 6.489,31.548 -1.894,19.059 -1.635,18.663 -23.126,35.353 -10.153,7.886 -18.899,13.962 -20.113,13.974 -6.215,0.063 -14.649,6.948 -14.649,11.958 0,1.771 0.506,2.118 2.751,1.882 1.512,-0.158 3.218,10e-4 3.79,0.354 1.415,0.875 15.733,-0.966 22.309,-2.868 3.891,-1.126 5.65,-1.248 6.45,-0.448 1.953,1.953 3.524,1.176 4.243,-2.098 0.778,-3.538 16.522,-19.292 27.858,-27.873 8.343,-6.316 9.452,-9.204 11.121,-28.966 0.722,-8.545 1.798,-18.22 2.391,-21.5 2.462,-13.614 3.027,-21.503 2.054,-28.702 -2.496,-18.469 -2.511,-16.762 0.144,-16.756 2.025,0.003 3.188,1.578 7.631,10.337 7.875,15.522 14.253,22.479 28.72,31.33 6.579,4.025 15.235,8.68 19.235,10.346 15.835,6.592 24.879,13.975 31.955,26.087 2.983,5.105 3.188,6.129 3.825,19.036 0.66,13.391 0.63,13.683 -1.652,15.871 -4.663,4.471 -8.158,5.98 -13.852,5.984 -6.333,0.005 -9.12,1.532 -10.977,6.014 -1.012,2.442 -1.025,3.567 -0.066,5.36 1.124,2.1 1.791,2.249 8.893,1.989 18.355,-0.672 25.624,-2.931 29.913,-9.295 3.081,-4.572 4.146,-8.963 4.867,-20.064 0.34,-5.225 1.452,-12.786 2.472,-16.803 2.738,-10.784 1.85,-13.997 -6.547,-23.697 -2.856,-3.3 -9.093,-11.942 -13.859,-19.204 -9.631,-14.674 -16.107,-21.844 -25.419,-28.143 -7.536,-5.097 -7.782,-6.513 -2.898,-16.704 3.324,-6.936 3.418,-7.026 11.25,-10.699 17.961,-8.425 60.019,-10.527 154.398,-7.716 75.309,2.242 100.193,3.906 127.656,8.534 12.092,2.039 43.826,11.729 80.844,24.689 30.675,10.738 63.505,20.743 68.069,20.743 3.908,0 2.14,-1.474 -4.788,-3.993 -3.455,-1.256 -12.806,-5.413 -20.781,-9.237 -7.975,-3.824 -16.145,-7.619 -18.156,-8.433 -2.012,-0.814 -10.562,-5.1 -19,-9.526 -8.439,-4.426 -19.153,-10.042 -23.808,-12.481 -16.544,-8.666 -52.511,-23.271 -64.7,-26.272 -4.86,-1.197 -11.113,-2.821 -13.897,-3.609 -2.784,-0.787 -10.209,-2.518999 -16.5,-3.846999 -6.291,-1.328 -17.739,-3.815 -25.439,-5.527 -27.207,-6.049 -65.876,-13.142 -87.5,-16.048 -6.955,-0.935 -23.043,-3.494 -37.637,-5.986 -3.375,-0.577 -16.425,-2.393 -29,-4.037 -22.063,-2.885 -33.768,-5.173 -52.863,-10.332 -5.517,-1.49 -14.703,-2.885 -23.736,-3.602 -15.111,-1.2 -17.317,-1.503 -36.302,-4.991 -6.071,-1.115 -15.521,-2.708 -21,-3.54 -5.479,-0.833 -13.112,-2.366 -16.962,-3.408 -8.297,-2.245 -45.994,-8.684 -59.5,-10.163 -5.225,-0.572 -19.4,-1.307 -31.5,-1.632 -18.535,-0.498 -23.339,-0.32 -30.5,1.133 -14.963,3.035 -25.221,4.481 -36.598,5.158 -9.801,0.583 -11.962,0.399 -18.5,-1.579 -14.105,-4.266 -30.470004,-11.313 -44.794004,-19.29 -20.526,-11.4290004 -30.279,-15.00300042 -38.108,-13.96200042"
     stroke="none"
     fill="#5a4c39"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
