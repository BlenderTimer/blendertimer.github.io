<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="270.11035"
   height="233.76463"
   viewBox="0 0 270.11035 233.76463"
   version="1.1"
   id="svg1"
   sodipodi:docname="Plains_Zebra-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.5591398"
     inkscape:cx="130.52069"
     inkscape:cy="109.03448"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 50.123,0.80033217 c 0,0.39000003 -1.125,0.49400003 -2.5,0.23100003 -1.459,-0.27900003 -2.5,-0.013 -2.5,0.638 0,0.615 -0.9,1.117 -2,1.117 -1.224,0 -2.014,0.679 -2.036,1.75 -0.028,1.384 -0.507,1.174 -2.288,-1 -2.962,-3.61800003 -3.676,-3.47000003 -3.676,0.764 0,3.037 -1.338,6.8219998 -3,8.4869998 -1.345,1.347 -4,7.387 -4,9.099 0,1.52 0.493,1.814 2.289,1.364 1.259,-0.316 3.588,-0.081 5.175,0.522 l 2.885,1.097 -5.042,5.209 c -2.773,2.864 -6.987,8.133 -9.363,11.708 -2.375,3.575 -7.813,10.467 -12.084,15.315 -5.352,6.075 -8.42,10.566 -9.874,14.451 l -2.109,5.637 2.66,5.258 c 3.366,6.652 4.166,7.28 10.194,7.994 4.567,0.54 5.165,0.353 7.856,-2.473 3.999,-4.197 15.587,-9.998 23.34,-11.684 6.438,-1.399 8.073,-1.269 8.073,0.643 0,2.042 5.985,14.555 10.933,22.859 4.735,7.944998 5.066,8.936998 5.066,15.187998 0.001,4.463 0.864,9.363 2.593,14.726 2.142,6.641 3.157,8.386 5.837,10.042 2.905,1.796 3.377,2.763 4.522,9.274 0.703,3.999 1.949,8.845 2.769,10.77 1.91,4.487 3.773,25.145 3.626,40.209 -0.094,9.578 -0.454,12.245 -1.98,14.649 -9.381,14.781 -9.562,15.526 -3.866,15.916 2.352,0.16 5.442,-0.457 7.5,-1.5 3.251,-1.648 3.477,-2.066 3.179,-5.872 -0.276,-3.518 0.123,-4.509 2.812,-7 l 3.133,-2.902 -0.668,-9.731 c -0.4,-5.818 -0.2,-13.255 0.499,-18.5 0.642,-4.823 1.434,-10.794 1.759,-13.269 l 0.592,-4.5 1.248,7.718 c 0.686,4.245 2.478,11.582 3.982,16.306 2.388,7.499 2.669,9.691 2.215,17.282 -0.487,8.137 -0.811,9.172 -5.062,16.158 -2.498,4.106 -4.324,7.818 -4.057,8.25 0.268,0.432 3.047,0.776 6.177,0.764 7.132,-0.028 11.072,-2.464 9.31,-5.756 -1.757,-3.283 -1.331,-5.675 1.477,-8.298 2.388,-2.23 2.542,-2.864 1.93,-7.924 -0.821,-6.773 -1.789,-60.871 -1.122,-62.611 0.345,-0.9 1.427,-1.025 3.79,-0.441 10.801,2.674 19.687,3.544 35.306,3.459 15.236,-0.083 17.623,-0.332 23,-2.404 5.533,-2.132 18.98,-9.617 22.5,-12.525 0.825,-0.681 3.941,-1.941 6.925,-2.8 6.232,-1.794 9.181,-0.933 8.809,2.57 -0.156,1.463 0.319,2.205 1.422,2.224 2.616,0.044 5.417,4.421 9.343,14.597 2,5.187 4.451,11.242 5.447,13.456 0.995,2.213 2.769,7.523 3.942,11.8 l 2.134,7.776 -2.073,10.7 c -2.562,13.228 -4.668,20.096 -6.961,22.699 -3.063,3.476 -6.237,10.651 -5.18,11.708 1.4,1.4 9.346,1.315 12.043,-0.128 1.997,-1.069 2.214,-1.737 1.649,-5.083 -0.587,-3.472 -0.373,-4.026 2.174,-5.622 1.554,-0.973 3.007,-1.9 3.229,-2.058 0.221,-0.159 0.981,-4.475 1.69,-9.592 0.708,-5.117 2.09,-12.661 3.07,-16.764 l 1.784,-7.461 0.659,6.5 c 0.363,3.575 0.704,10.1 0.758,14.5 0.102,8.356 0.037,8.53 -7.107,18.809 -1.791,2.576 1.364,4.691 7,4.691 7.03,0 8.414,-1.227 7.675,-6.801 -0.554,-4.178 -0.322,-5.025 2.089,-7.627 2.436,-2.629 2.652,-3.444 2.119,-8 -1.598,-13.647 -1.91,-22.572 -0.788,-22.572 0.632,0 1.148,0.45 1.148,1 0,0.55 0.437,1 0.971,1 1.705,0 2.643,-6.162 1.894,-12.43 -0.473,-3.959 -0.351,-6.418 0.351,-7.07 0.718,-0.667 0.897,-0.667 0.536,0 -0.298,0.55 0.161,1.651 1.021,2.446 1.394,1.291 1.481,1.183 0.8,-1 -0.419,-1.345 -0.917,-3.571 -1.106,-4.946 -0.189,-1.375 -0.822,-4.072 -1.405,-5.993 -1.599,-5.261 -1.144,-6.01 0.916,-1.507 l 1.83,4 -0.408,-4.943 c -0.224,-2.719 -0.743,-5.194 -1.154,-5.5 -0.928,-0.693 -1.003,-1.489 -1.696,-17.913 -0.31,-7.346 -0.898,-13.871 -1.307,-14.5 -0.409,-0.629 -0.743,-7.444 -0.743,-15.144 0,-12.947998 -0.188,-14.371998 -2.5,-18.945998 -4.819,-9.535 -12.023,-14.591 -26.691,-18.733 -11.61,-3.278 -23.113,-2.912 -48.809,1.552 -11.595,2.014 -26.374,3.904 -33,4.22 -12.053,0.574 -13.588,0.399 -35.385,-4.04 -4.062,-0.828 -7.887,-1.251 -8.5,-0.942 -0.613,0.309 0.01,-0.41 1.385,-1.598 1.61,-1.392 2.073,-2.336 1.3,-2.654 -0.852,-0.349 -0.924,-1.217 -0.25,-2.991 0.523,-1.374 0.935,-3.481 0.917,-4.683 -0.041,-2.68 -3.233,-6.685 -5.328,-6.685 -0.847,0 -1.899,-0.637 -2.339,-1.416 -0.44,-0.778 -2.549,-2.803 -4.688,-4.5 -2.138,-1.696 -3.601,-3.084 -3.251,-3.084 0.35,0 -1.163,-1.854 -3.362,-4.121 -2.199,-2.266 -3.999,-4.478 -3.999,-4.915 0,-0.728 -2.193,-3.597 -6,-7.849 -0.825,-0.922 -2.157,-2.934 -2.96,-4.473 -0.804,-1.538 -2.279,-3.235 -3.278,-3.77 -1,-0.535 -1.585,-1.349 -1.301,-1.809 0.285,-0.461 -0.265,-0.775 -1.222,-0.7 -1.056,0.083 -1.641,-0.4739998 -1.49,-1.4169998 0.344,-2.147 -9.036,-7.061 -13.886,-7.276 -2.122,-0.093 -3.859,-0.47700003 -3.86,-0.85300003 -0.002,-0.376 -1.353,-0.645 -3.003,-0.598 -1.65,0.047 -3,0.404 -3,0.795 M 255.468,125.44533 c -1.151,2.662 -3.09,8.475 -4.308,12.916 l -2.215,8.075 2.977,4.694 2.978,4.695 0.401,-14.269 c 0.252,-8.975 0.874,-15.126 1.676,-16.575 0.702,-1.268 1.12,-2.772 0.93,-3.342 -0.19,-0.57 -1.287,1.143 -2.439,3.806"
     stroke="none"
     fill="#cabfb0"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
