<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="764.77313"
   height="184.40489"
   viewBox="0 0 764.77313 184.40489"
   version="1.1"
   id="svg1"
   sodipodi:docname="Liopleurodon_Ferox-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.5129717"
     inkscape:cx="379.16322"
     inkscape:cy="85.774713"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 369.55836,0.48789845 c -20.744,1.12200005 -38.319,4.12500005 -60,10.25399955 -6.6,1.866 -15.6,4.169 -20,5.119 -4.4,0.95 -10.7,2.378 -14,3.174 -10.541,2.543 -43.795,3.869 -62,2.472 -38.497,-2.954 -59.274,-2.282 -74.5,2.409 -5.084,1.566 -12.719,2.955 -19,3.457 -13.156,1.051 -14.791,1.467 -23.999997,6.104 -8.627,4.344 -19.602,7.633 -39.602,11.866 -29.347,6.211 -41.578,9.607 -51.6299996,14.336 -5.31599999,2.501 -5.958,4.635 -3.303,10.989 1.75,4.187 9.2059996,8.769 17.4619996,10.732 6.295,1.496 21.826,0.854 37.573,-1.552 14.508,-2.217 60.873997,-2.871 87.617997,-1.236 11.89,0.727 25.615,1.049 30.5,0.716 4.885,-0.333 10.169,-0.244 11.743,0.198 1.574,0.442 7.424,1.29 13,1.885 17.741,1.894 46.11,6.951 69.139,12.325 8.25,1.925 17.25,3.797 20,4.159 10.87,1.432 18.553,3.739002 19.666,5.906002 6.912,13.465 42.957,49.325 61.862,61.544 12.331,7.97 33.087,15.24 37.616,13.176 3.221,-1.467 2.968,-3.585 -1.245,-10.411 -1.981,-3.21 -3.377,-6.06 -3.102,-6.336 0.275,-0.275 3.134,0.822 6.352,2.438 9.394,4.716 36.318,11.885 42.601,11.344 6.833,-0.589 -6.588,-19.655 -31.961,-45.401 l -12.564,-12.75 9.887,-0.01 c 17.238,-0.018 46.399,-3.263 67.831,-7.547 5.702,-1.14 8.573,-1.301 10.179,-0.57 1.23,0.561 6.618,6.283 11.973,12.715 5.355,6.433 12.171,14.092 15.147,17.021 10.225,10.063 25.955,19.891 53.258,33.275 23.199,11.373 30.252,11.969 25.12,2.123 -2.827,-5.425 -1.63,-5.283 11.666,1.386 12.911,6.475 19.67,8.607 27.285,8.607 6.822,0 10.908,-2.429 9.204,-5.472 -0.559,-1 -6.397,-6.815 -12.972,-12.923 -6.576,-6.108 -18.29,-17.855 -26.032,-26.105 -18.794,-20.029 -31.299,-31.176 -44.411,-39.59 l -5.3,-3.401002 2.97,-0.636 c 4.949,-1.06 23.89,-0.94 36.798,0.234 11.981,1.09 19.427,2.284 45.172,7.243002 18.402,3.546 52.81,5.42 67.95,3.701 14.632,-1.66 29.653,-4.731 37.05,-7.573002 3.3,-1.268 7.125,-2.55 8.5,-2.848 1.375,-0.299 3.4,-1.268 4.5,-2.154 1.903,-1.533 1.807,-1.585 -2,-1.078 -2.2,0.293 -9.625,1.435 -16.5,2.538 -6.875,1.103 -14.525,2.016 -17,2.029 -5.435,0.029 -26.555,-3.445 -33.5,-5.511 -8.309,-2.471 -25.654,-7.493 -31.435,-9.101 -6.44,-1.791 -31.783,-12.206 -41.184,-16.924 -6.537,-3.281 -15.148,-6.953 -48.381,-20.629 -69.51,-28.606 -126.154,-43.5389995 -172,-45.34399955 -7.7,-0.303 -15.125,-0.669 -16.5,-0.814 -1.375,-0.144 -8.35,0.055 -15.5,0.441"
     stroke="none"
     fill="#28230c"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
