<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="569.51813"
   height="177.82172"
   viewBox="0 0 569.51813 177.82172"
   version="1.1"
   id="svg1"
   sodipodi:docname="Megalosaurus_Bucklandii-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.63970588"
     inkscape:cx="286.85057"
     inkscape:cy="96.91954"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 69.596279,0.84258139 c -2.75,0.70700001 -6.35,1.98400001 -8,2.83700001 -1.65,0.854 -10.875,4.141 -20.5,7.3049996 -24.981,8.213 -30.388,10.374 -34.5550002,13.809 -6.32899997,5.217 -8.623,14.874 -4.384,18.454 1.133,0.957 3.001,3.401 4.151,5.431 2.967,5.24 6.1450002,6.272 16.0830002,5.224 9.889,-1.043 19.97,-0.983 41.205,0.246 17.686,1.023 20.443,1.83 31.211,9.142 3.229,2.193 8.826001,5.327 12.438001,6.965 3.612,1.638 9.101,5.041 12.197,7.563 7.516,6.122 8.283,6.491 22.154,10.639 l 12,3.589 0.5,11.199999 c 0.498,11.149 0.515,11.213 3.812,14.22 3.364,3.069 5.605,3.773 6.646,2.088 0.317,-0.512 2.129,0.666 4.027,2.62 4.108,4.23 5.986,3.882 7.447,-1.382 1.59,-5.725 1.29,-10.851 -0.911,-15.566 -1.088,-2.331 -2.101,-5.296999 -2.25,-6.590999 l -0.271,-2.352 11.5,0.153 c 7.463,0.099 11.896,0.573 12.629,1.352 0.622,0.659 2.112,4.304999 3.313,8.100999 1.2,3.796 3.572,9.646 5.269,13 1.698,3.354 3.69,8.348 4.426,11.098 1.764,6.587 1.725,17.697 -0.077,22.01 -3.683,8.815 -11.33,14.76 -20.56,15.983 -3.025,0.401 -6.927,1.316 -8.672,2.034 -3.268,1.345 -7.116,6.019 -5.931,7.203 1.054,1.054 39.82,0.622 42.603,-0.474 2.327,-0.917 2.501,-1.462 2.516,-7.871 0.014,-5.896 0.573,-8.065 3.892,-15.101 4.154,-8.807 4.327,-9.971 3.114,-20.94 -0.646,-5.837 -0.412,-8.603 1.268,-15 1.132,-4.314 2.351,-9.869 2.708,-12.344 1.067,-7.403999 1.399,-7.999999 4.466,-7.999999 2.16,0 4.451,1.615 9.683,6.824999 5.92,5.896 8.852,7.811 21.535,14.069 13.337,6.581 15.066,7.743 18.885,12.693 4.389,5.688 6.581,12.32 7.027,21.253 0.357,7.162 -0.598,8.96 -5.404,10.173 -6.844,1.727 -12.409,3.978 -15.132,6.12 -5.571,4.382 -1.631,7.44 8.385,6.509 12.582,-1.169 16.091,-2.824 23.704,-11.177 3.769,-4.135 7.244,-8.372 7.722,-9.415 0.645,-1.41 -0.029,-3.394 -2.623,-7.724 -1.921,-3.204 -4.748,-9.651 -6.283,-14.326 -2.587,-7.878 -3.392,-9.125 -11.009,-17.046 -5.038,-5.238 -9.426,-10.936 -11.336,-14.721 -1.715,-3.396999 -3.118,-6.438999 -3.118,-6.759999 0,-0.321 2.363,-1.661 5.25,-2.977 5.581,-2.545 19.52,-4.86 50.75,-8.43 9.625,-1.1 27.85,-3.575 40.5,-5.501 33.42,-5.086 49.841,-6.054 79.5,-4.686 26.885,1.24 36.084,2.554 50.72,7.242 22.083,7.074 39.097,16.728 55.145,31.288999 4.601,4.174 8.737,7.59 9.191,7.59 3.787,0 -0.361,-6.097 -11.696,-17.194 -11.169,-10.931999 -24.639,-20.483999 -40.305,-28.579999 -23.648,-12.222 -41.174,-18.285 -61.055,-21.122 -9.056,-1.293 -62.803,-6.404 -90.5,-8.607 -27.013,-2.148 -65.19,-6.111 -76.091,-7.898 -4.9,-0.803 -22.184,-3.927 -38.409,-6.941 -40.357,-7.499 -45.527,-7.928 -90.457,-7.511 -43.975,0.408 -41.236,0.897 -54.782,-9.776 -4.419,-3.4809996 -10.386001,-7.2099996 -13.261001,-8.2849996 -7.007,-2.62200001 -15.838,-3.31700001 -22,-1.73100001 M 158.76328,108.15458 c -1.528,1.527 -0.612,6.292 1.419,7.379 2.951,1.579 3.434,0.56 1.916,-4.041 -1.301,-3.941 -2.017,-4.657 -3.335,-3.338 m 11.083,8.949 c -0.387,0.614 0.187,1.922 1.274,2.905 1.128,1.022 1.976,1.294 1.976,0.634 0,-0.635 -0.417,-1.155 -0.927,-1.155 -0.509,0 -1.082,-0.787 -1.273,-1.75 -0.222,-1.119 -0.6,-1.347 -1.05,-0.634"
     stroke="none"
     fill="#b19f80"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
