<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="1064.9048"
   height="173.38791"
   viewBox="0 0 1064.9048 173.38791"
   version="1.1"
   id="svg1"
   sodipodi:docname="Mosasaurus_Hoffmanni-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.39048474"
     inkscape:cx="531.3908"
     inkscape:cy="87.071264"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="M 321,0.70853328 C 279.968,3.5855333 212.086,12.984533 165.572,22.228533 c -12.335,2.451 -26.735,4.911 -32,5.465 -39.342,4.145 -80,11.182 -106.572,18.444 -17.179,4.695 -20.778,6.135 -24.16,9.665 -2.394,2.499 -2.84,3.802 -2.84,8.294 0,7.454 1.599,8.888 12.285,11.01 12.664,2.515 43.504,10.191 52.215,12.996 4.125,1.328 19.61,6.319 34.412,11.09 14.801,4.770997 31.226,10.472997 36.5,12.671997 14.096,5.876 28.788,11.012 47.868,16.734 19.503,5.848 26.192,7.239 46.22,9.608 l 14.5,1.715 5.751,6.261 c 9.844,10.718 31.566,23.038 46.021,26.102 22.121,4.688 53.273,-6.374 50.382,-17.891 -0.359,-1.432 -1.779,-3.941 -3.154,-5.575 -1.375,-1.635 -2.5,-3.173 -2.5,-3.42 0,-0.246 7.762,-0.738 17.25,-1.093 49.335,-1.845 143.105,-13.979 183.25,-23.714 12.459,-3.022 63.563,-13.956 65.225,-13.956 0.818,0 3.262,1.405 5.431,3.123 5.232,4.145 18.373,10.519 25.521,12.381 12.499,3.256 33.11,1.053 42.977,-4.592 8.723,-4.991 13.346,-9.9 13.346,-14.172 0,-3.132 -0.619,-4.023997 -5.047,-7.273997 -2.776,-2.038 -4.89,-3.863 -4.697,-4.055 0.192,-0.192 5.051,-1.041 10.797,-1.885 5.746,-0.845 14.497,-2.196 19.447,-3.003 22.623,-3.689 81.764,-8.523 104.277,-8.523 5.86,0 11.303,0.498 12.539,1.148 1.201,0.632 6.546,5.321 11.877,10.421 11.383,10.888997 39.102,31.871997 51.206,38.761997 21.462,12.217 74.031,29.643 106.04,35.151 21.128,3.636 53.452,4.522 60.75,1.666 4.193,-1.641 5.307,-4.616 3.123,-8.343 -0.996,-1.702 -2.487,-3.471 -3.312,-3.932 -0.825,-0.462 -10.95,-5.857 -22.5,-11.991 -28.976,-15.387 -30.544,-16.282 -43.124,-24.63 -17.374,-11.529 -36.573,-27.178997 -57.376,-46.772997 -20.767,-19.559 -22.272,-20.627 -34.571,-24.543 -3.811,-1.213 -7.491,-2.65 -8.179,-3.193 -1.774,-1.402 -1.56,-10.28 0.455,-18.928 3.55,-15.2289997 1.721,-21.1119997 -6.529,-20.9979997 -6.842,0.094 -14.945,5.198 -28.209,17.7689997 -9.553,9.053 -11.911,10.353 -23.629,13.027 -11.713,2.674 -40.061,2.335 -82.338,-0.985 -80.983,-6.358 -122.1,-9.699 -131,-10.643 -5.225,-0.554 -20.75,-1.915 -34.5,-3.025 -23.945,-1.932 -57.266,-5.243 -85,-8.444 C 482.858,7.7115333 452.705,4.7735333 426,2.5525333 397.637,0.19253328 342.229,-0.78046672 321,0.70853328"
     stroke="none"
     fill="#6d6d71"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
