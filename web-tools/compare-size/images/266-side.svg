<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="1164.3656"
   height="971.85992"
   viewBox="0 0 1164.3656 971.85992"
   version="1.1"
   id="svg1"
   sodipodi:docname="Giant_Eland-sied.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1">
    <inkscape:path-effect
       effect="simplify"
       id="path-effect1"
       is_visible="true"
       lpeversion="1.3"
       threshold="5"
       steps="1"
       smooth_angles="360"
       helper_size="10"
       simplify_individual_paths="false"
       simplify_just_coalesce="false" />
  </defs>
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.45401823"
     inkscape:cx="662.96898"
     inkscape:cy="488.96715"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 335.93661,3.6846814 c -10.57908,6.4971766 -21.78583,11.8559266 -31.02378,20.1138046 -9.79784,8.758365 -18.1334,19.125427 -28.32185,27.660376 -10.09365,8.455536 -21.59404,14.999725 -33.61428,20.203382 -19.80466,8.5736 -38.04009,20.101127 -55.24048,33.298966 -14.11419,10.82981 -17.89197,35.88454 -35.76361,39.02747 -12.25533,2.15524 -25.24407,1.51946 -35.88649,10.31856 -13.98909,11.56611 -23.014689,27.18036 -37.779771,38.55068 -12.12709,9.33884 -17.758512,23.41153 -30.03484,33.51162 -10.323412,8.49338 -19.202669,18.62671 -25.349898,30.17514 -6.970163,13.09443 -21.8979891,23.36128 -22.86053143,38.38017 -0.82601296,12.88858 6.86062553,25.02964 14.89718743,35.09368 9.371436,11.73567 24.439049,8.30304 37.547462,7.01609 13.392953,-1.31487 15.608985,16.21133 21.306753,25.08261 8.511698,13.25249 12.1607,28.66772 21.470298,41.76085 9.32357,13.11278 20.99826,23.17109 31.10839,36.63423 7.93291,10.56384 10.58854,23.13949 16.77283,34.7915 6.81494,12.84022 10.87858,26.89383 13.94551,41.1106 3.46321,16.05375 3.84814,32.46954 8.36279,48.53 4.16589,14.81975 6.21767,30.20924 13.05033,44.22321 7.19466,14.75643 14.90197,31.86856 30.79631,38.03828 12.88425,5.00129 28.35345,8.19845 41.94031,3.98258 14.73341,-4.57162 24.25331,-18.75481 38.33722,-23.94027 14.62277,-5.38385 29.31163,-13.17771 37.19438,-26.87276 6.62582,-11.51131 19.45814,-16.01867 32.41382,-16.0546 13.49663,-0.0374 27.64434,-4.41216 40.55207,-0.48304 12.37786,3.76782 22.51443,9.87671 31.37233,21.19109 4.47228,5.71254 1.59488,13.16148 1.38766,19.77848 -1.03117,32.92646 -0.9567,66.08069 2.91199,98.78129 2.31029,19.52801 7.67375,38.57584 9.15821,58.23159 1.73774,23.00941 0.56203,46.37136 -3.02332,69.17842 -2.63612,16.76882 -13.53662,32.81883 -11.05329,49.58235 2.08552,14.07816 -10.62223,21.62478 -17.51369,31.82683 -6.03659,8.93652 -20.879,30.2413 -3.23577,31.30795 21.96419,1.32788 44.6606,0.64038 65.46344,-8.07258 13.75283,-5.76018 15.77189,-19.4819 20.2835,-31.23485 4.25307,-11.07945 7.18008,-22.95442 8.11044,-35.13057 1.33022,-17.40945 -2.11915,-34.48395 -2.01442,-51.95345 0.1392,-23.21998 1.35221,-46.35687 3.77779,-69.50668 1.69883,-16.21366 6.45518,-31.76592 10.17908,-47.65347 5.64881,-24.09998 13.82282,-47.71482 15.37311,-72.64944 0.9956,-16.01315 6.43447,-31.47674 6.3387,-47.54494 -0.0895,-15.01524 10.43328,-17.95316 24.82674,-15.54827 21.83496,3.64822 44.19717,-2.01105 66.07672,1.19956 24.23629,3.55643 49.39766,2.44631 72.91665,9.30243 18.33338,5.34444 40.82515,-3.4141 56.75188,6.96601 11.66137,7.6002 25.80301,9.35521 39.45719,7.79568 12.6612,-1.44611 25.01296,-0.56341 37.88959,-3.98389 13.57491,-3.60596 27.4077,-12.13295 38.73534,-21.61267 11.94068,-9.99275 23.73387,-20.61019 38.62142,-25.53215 10.4694,-3.46129 26.23712,-23.47065 31.49123,-14.68032 9.67176,16.18126 18.27732,32.95895 26.93353,49.7458 15.79823,30.63723 25.71192,63.76714 40.23361,94.98404 5.7442,12.34822 6.3233,25.99554 10.2298,39.07072 6.685,22.37464 4.7473,46.26091 1.6385,68.98683 -4.0746,29.78704 -11.5574,58.83189 -17.6915,88.28542 -3.2585,15.64563 -16.22913,26.05349 -23.20365,39.97929 -5.85961,11.69971 -20.76043,28.55699 -10.11554,38.47064 10.04623,9.35613 25.10295,2.84372 37.36459,7.42006 14.7261,5.49615 20.9767,-12.09949 29.0917,-21.76798 6.8,-8.10183 16.2036,-6.11438 18.2071,-22.72379 1.5901,-13.18319 2.6735,-26.47022 4.8103,-39.62156 4.0661,-25.02482 9.5641,-49.73169 16.4651,-74.12594 4.1614,-14.71023 -1.7124,-40.10762 13.0276,-44.08843 11.6334,-3.14183 10.5311,21.19805 10.7357,30.32659 0.6168,27.51337 -0.3096,55.31162 -7.6589,81.79718 -3.5551,12.81219 -1.6575,28.84089 -10.2981,38.86053 -7.0746,8.20369 -16.2828,24.69598 -1.9001,31.59851 11.9828,5.75079 24.4635,0.35323 37.4046,-0.0954 17.201,-0.59636 9.5703,-22.53331 20.3371,-29.85804 13.9126,-9.4649 13.2033,-28.18965 10.7159,-42.49691 -2.8895,-16.62069 3.1786,-32.69633 3.2552,-49.31778 0.1368,-29.67218 0.5026,-59.34863 3.2847,-88.89709 2.0053,-21.29871 -1.2775,-43.55037 5.0797,-63.98095 1.3893,-4.46458 -0.1574,-8.31663 -2.4066,-12.23123 -6.6484,-11.57144 -14.5646,-22.09221 -22.2865,-33.12282 -12.9372,-18.48087 -14.1812,-42.03527 -22.8979,-62.96018 -4.9388,-11.85605 0.1432,-24.13529 -1.6407,-36.29312 -2.2261,-15.17068 4.436,-29.54327 8.2311,-43.82188 3.8014,-14.30203 8.4471,-28.36167 10.8149,-43.01312 2.042,-12.63549 3.944,-25.23855 7.5142,-37.66097 4.2995,-14.96015 5.4132,-30.99317 3.5204,-46.35232 -0.7343,-5.95906 5.643,-9.14188 9.3358,-12.93526 6.4951,-6.67217 13.6531,-16.33482 11.9362,-24.97248 -2.5262,-12.70935 -7.4433,-24.72949 -16.5246,-34.50923 -9.131,-9.83325 -20.3564,-17.29739 -31.5169,-24.61362 -11.1824,-7.3306 -22.8932,-13.60649 -35.5172,-17.09856 -9.5683,-2.6468 -16.9584,-10.51274 -26.6663,-13.76973 -24.4624,-8.20708 -50.8592,-11.14057 -76.40873,-8.96065 -28.0286,2.39143 -54.89545,11.86205 -83.14322,13.33893 -30.04074,1.57063 -59.74302,9.9153 -89.7595,8.55286 -13.20342,-0.5993 -25.84882,2.30709 -39.34241,1.34869 -11.37369,-0.80782 -23.80744,2.47359 -34.25936,-1.89387 -16.68817,-6.97336 -27.13472,-24.60866 -43.93602,-30.59313 -12.20797,-4.34837 -20.5265,-14.39229 -32.29821,-19.73563 -20.01262,-9.08402 -39.11191,-21.04462 -61.1962,-24.45417 -21.00389,-3.24276 -42.61196,-4.15539 -63.66446,-1.71034 -20.66201,2.3997 -41.86956,6.11384 -60.44454,15.47054 -13.20692,6.65268 -27.98826,10.48511 -40.02389,19.0344 -17.80416,12.64686 -42.53704,16.05994 -62.24343,8.54603 -13.27932,-5.0633 -26.62844,-2.89619 -40.60433,-5.76889 -14.90728,-3.06414 -29.53463,-6.75013 -44.36597,-10.15389 -15.35896,-3.52485 -39.687,-0.74217 -44.71656,-15.77541 -2.576,-7.6996 14.25835,-11.82809 19.25931,-19.0284 8.34918,-12.02104 23.32967,-15.78415 34.01237,-25.0614 15.91181,-13.81842 36.99399,-17.99134 55.92008,-26.11874 13.69142,-5.87949 26.25633,-13.615583 38.50658,-22.261599 25.11212,-17.723702 48.07853,-40.520438 60.3605,-68.377375 6.50453,-14.7530313 -10.36076,-9.035694 -17.67764,-2.157546 -16.25002,15.275649 -38.17483,24.886234 -51.16561,43.043921 -8.20058,11.462253 -23.81479,14.363666 -35.04362,22.849125 -11.49387,8.685735 -27.58365,1.386347 -38.94467,11.234622 -10.70016,9.275422 -25.76027,3.436413 -37.58096,8.982252 -8.84837,4.15134 -9.73712,-1.39371 -2.60453,-6.021323 24.71895,-16.037622 42.8247,-39.885144 62.7822,-61.201326 8.54297,-9.124555 18.8877,-17.394979 24.10383,-28.7143613 5.09398,-11.0542823 -8.36482,-7.64040838 -13.4665,-3.8019883"
     stroke="none"
     fill="#302721"
     fill-rule="evenodd"
     id="path1"
     sodipodi:nodetypes="ccscsccccssscccscccccccscccscccsscsccccscccccsscccccccscsccccccsssccscccscscccsccsccscssccccccccscssccccscscscssccccccccscccccsscssscssccccccsccssccsccccscccssscscssccscccccssccsssccscscccsccsccscccsccsscsssssssscccccsccsccccsscccsccccscssssccscscccccccsssscscsscscccccssccccssc"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
