<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="333.02249"
   height="209.85121"
   viewBox="0 0 333.02249 209.85121"
   version="1.1"
   id="svg1"
   sodipodi:docname="Nuralagus_Rex-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.1693548"
     inkscape:cx="168.04138"
     inkscape:cy="101.76552"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 195.487,0.56053573 c -1.839,0.412 -4.764,1.42199997 -6.5,2.24599997 -1.736,0.823 -6.082,2.772 -9.657,4.33 -9.574,4.1740003 -23.473,12.7740003 -31.068,19.2230003 -3.668,3.115 -10.162,8.589 -14.431,12.164 -12.018,10.065 -20.393,18.084 -21.05,20.155 -0.535,1.684 -1.313,1.821 -7.275,1.279 -9.108,-0.828 -18.183,-3.864 -27.469,-9.19 -8.751,-5.018 -16.59,-8.244 -20.033,-8.244 -1.619,0 -2.768,-0.975 -3.867,-3.279 -3.778,-7.923 -9.698,-11.721 -18.27,-11.721 -1.417,0 -4.255,-1.04 -6.307,-2.311 -7.524,-4.663 -17.139,-7.207 -19.821,-5.246 -1.508,1.102 -1.43,1.395 0.841,3.182 1.376,1.082 3.426,3.779 4.555,5.993 1.13,2.214 5.514,7.453 9.743,11.641 l 7.69,7.615 -4.858,3.313 c -12.303,8.392 -21.644,19.764 -25.857,31.478 l -1.853,5.153 4.249,4.841 c 7.613,8.675004 11.99,9.781004 25.013,6.317 8.009,-2.129 20.001,-2.617 23.134,-0.941 1.064,0.57 1.934,1.727004 1.934,2.573004 0,0.846 3.504,5.218 7.786,9.715 4.283,4.497 10.006,11.102 12.72,14.677 6.625,8.728 25.557,27.693 28.923,28.973 1.486,0.565 3.822,1.027 5.191,1.027 3.501,0 7.493,8.852 8.153,18.075 0.586,8.19 -1.693,13.809 -7.455,18.38 -3.239,2.57 -4.79,3.025 -11.916,3.5 -6.261,0.416 -8.713,1.016 -10.4,2.543 -2.437,2.205 -5.421,7.417 -4.674,8.163 0.754,0.755 13.047,2.214 27.172,3.225 15.85,1.135 34.237,-0.012 37.82,-2.36 3.522,-2.308 7.44,-13.599 9.44,-27.205 l 1.66,-11.295 6.193,-6.138 6.193,-6.138 11.133,1.785 c 10.059,1.613 12.518,1.658 25.514,0.469 11.524,-1.054 14.98,-1.067 17.39,-0.069 1.844,0.764 5.714,4.799 10,10.426 8.024,10.537 9.997,14.199 8.47,15.726 -1.48,1.48 -23.568,4.912 -31.613,4.913 -6.86,0 -12.35,1.82 -14.004,4.643 -0.442,0.754 -2.467,2.22 -4.5,3.258 -5.309,2.709 -7.561,5.508 -6.818,8.47 0.904,3.6 5.128,3.98 35.591,3.199 22.575,-0.579 28.5,-1.065 39.735,-3.258 7.263,-1.418 14.486,-3.357 16.051,-4.309 3.781,-2.3 4.812,-6.131 6.861,-25.503 2.003,-18.942 2.016,-19.215 1.077,-22.75 -0.559,-2.102 -0.378,-2.75 0.768,-2.75 3.489,0 9.18,-3.258 11.243,-6.436 1.731,-2.667 3.438,-3.754 7.957,-5.068 3.165,-0.92 7.895,-2.758 10.513,-4.084 2.618,-1.327 6.349,-2.412 8.293,-2.412 7.069,0 9.562,-6.928 7.555,-21 -3.054,-21.411004 -10.569,-39.511004 -26.645,-64.177004 -9.114,-13.985 -19.756,-24.263 -33.877,-32.72 C 254.135,4.0295357 239.927,0.35953573 215.33,0.03153573 c -9.075,-0.121 -18.004,0.117 -19.843,0.529"
     stroke="none"
     fill="#693a2d"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
