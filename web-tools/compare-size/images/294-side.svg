<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="534.38263"
   height="190.68715"
   viewBox="0 0 534.38263 190.68715"
   version="1.1"
   id="svg1"
   sodipodi:docname="Carcharodontosaurus_Saharicus-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.70731707"
     inkscape:cx="267.91379"
     inkscape:cy="89.068966"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 74.665276,1.251152 c -7.244,2.321 -16.896,7.731 -23.895,13.394 -3.932,3.181 -7.196,5.042 -8.845,5.042 -3.704,0 -9.759,4.71 -22.413,17.436 -16.8800003,16.975 -22.5440003,28.781 -18.0130003,37.543 0.819,1.584 2.399,3.168 3.511,3.521 1.112,0.353 2.682,1.917 3.488,3.476 3.9330003,7.607 7.3130003,7.794 17.2090003,0.953 8.272,-5.719 22.595,-12.727 32.303,-15.806 20.309,-6.441 19.337,-6.244 24.903,-5.05 2.881,0.617 8.919,2.845 13.418,4.949 4.498004,2.105 9.529004,4.122 11.179004,4.483 6.359,1.393 8.538,2.836 11.461,7.587 2.56,4.16 7.772,8.942 12.922,11.854 0.855,0.484 1.476,2.841 1.625,6.168 0.289,6.465998 1.086,8.621998 3.466,9.377998 0.983,0.312 2.823,1.465 4.087,2.561 2.355,2.043 4.636,2.082 4.189,0.072 -0.137,-0.619 0.2,-1.125 0.75,-1.125 1.436,0 1.233,-2.326 -0.494,-5.636 -1.878,-3.601998 -1.907,-5.363998 -0.088,-5.363998 4.095,0 4.582,1.004 4.582,9.441998 0,7.808 0.147,8.358 2.885,10.798 1.587,1.414 3.071,3.128 3.298,3.809 0.32,0.959 0.903,0.975 2.592,0.071 3.465,-1.854 4.606,-5.086 4.367,-12.37 -0.249,-7.555 0.049,-7.78 7.742,-5.837 4.365,1.103 11.366,2.523 20.116,4.081 3.575,0.636 8.75,1.624 11.5,2.194 5.332,1.106 16.291,6.65 18.568,9.394 2.226,2.682 15.636,11.386 23.968,15.556 10.534,5.273 10.716,5.563 7.899,12.607 -2.158,5.398 -4.655,10.113 -5.96,11.255 -3.588,3.14 -6.705,12.935 -5.289,16.623 0.561,1.462 2.921,1.887 3.481,0.627 0.806,-1.814 8.456,-5.101 9.857,-4.235 0.947,0.585 2.248,0.382 3.716,-0.581 2.672,-1.75 2.709,-1.642 0.767,2.251 -2.606,5.224 -4.895,6.521 -12.896,7.304 -10.174,0.996 -16.929,5.135 -15.302,9.375 0.542,1.41 2.625,1.636 15.11,1.636 21.376,0 29.37,-1.928 32.133,-7.75 1.477,-3.113 1.531,-4.234 0.429,-8.828 -1.12,-4.669 -1.006,-6.515 1.006,-16.36 1.292,-6.32 2.025,-12.601 1.702,-14.592 -0.41,-2.524 0.138,-5.034 1.972,-9.041 3.83,-8.366 2.95,-11.083 -6.748,-20.82 -4.352,-4.37 -7.913,-8.483 -7.913,-9.141 0,-1.251 19.23,-11.467998 21.584,-11.467998 0.745,0 2.912,-0.874 4.815,-1.943 4.584,-2.575 12.253,-3.796 28.601,-4.555 43.261,-2.007 86.144,-7.553 119.5,-15.455 27.999,-6.632 57.355,-8.44 69.722,-4.293 5.848,1.961 11.895,4.86 18.003,8.631 1.235,0.763 2.046,0.744 2.857,-0.067 1.979,-1.979 -6.52,-10.032 -14.536,-13.773 -7.216,-3.368 -20.141,-6.973 -29.046,-8.102 -2.75,-0.348 -26.6,-0.736 -53,-0.862 -50.501,-0.241 -54.987,-0.55 -82,-5.652 -14.564,-2.751 -25.853,-5.773 -44,-11.777 -36.311,-12.015 -53.73,-15.841 -87,-19.11 -49.092,-4.823 -60.409,-4.969 -73.5,-0.946 -5.531,1.7 -10.022,2.318 -17.107,2.355 l -9.608,0.049 -8.722,-5.926 c -14.219,-9.662 -16.794004,-10.72500005 -27.063004,-11.17100005 -6.325,-0.275 -10.44,0.07 -13.845,1.16100005"
     stroke="none"
     fill="#3b3226"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
