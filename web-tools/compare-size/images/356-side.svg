<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="251.92398"
   height="134.44521"
   viewBox="0 0 251.92398 134.44521"
   version="1.1"
   id="svg1"
   sodipodi:docname="Smilodon_Populator-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.1693548"
     inkscape:cx="135.54483"
     inkscape:cy="48.744828"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 71.348619,1.8352001 c -7.682,1.953 -18.401,4.191 -31.5,6.576 -4.675,0.851 -10.167,2.0089999 -12.203,2.5749999 -13.271,3.682 -31.6440004,30.903 -26.87400037,39.815 1.33399997,2.492 6.69499997,5.504 8.53899997,4.797 0.7050004,-0.27 2.2010004,0.753 3.3260004,2.274 2.431,3.288 8.69,6.487 10.976,5.61 1.306,-0.501 1.03,-0.984 -1.409,-2.467 -3.803,-2.313 -7.355,-6.758 -7.355,-9.205 0,-1.534 0.771,-1.865 4.345,-1.865 4.847,0 5.823,0.799 10.15,8.316 2.067,3.59 2.484,5.105 1.639,5.95 -1.859,1.859 -1.291,4.459 1.116,5.104 3.441,0.922 4.472,0.765 6.179,-0.941 2.007,-2.008 2.01,-5.287 0.005,-7.502 -1.443,-1.594 -1.226,-2.06 2.75,-5.922 3.773,-3.663 4.976,-4.235 9.559,-4.54 4.908,-0.327 5.396,-0.145 7.626,2.843 3.37,4.517 6.961,10.867 11.701,20.692 4.053,8.401 4.1,8.626 4.015,19.317 -0.048,5.95 -0.536,11.657 -1.086,12.684 -0.549,1.027 -0.999,3.12 -0.999,4.65 0,1.53 -0.736,4.71 -1.636,7.066 l -1.636,4.283 h -5.307 c -4.351,0 -5.588,0.401 -6.864,2.223 -2.004,2.86 -1.965,3.369 0.443,5.777 1.767,1.767 3.333,2 13.443,2 10.692,0 11.546,-0.146 13,-2.223 0.856,-1.222 1.557,-3.147 1.557,-4.277 0,-1.13 0.657,-2.993 1.46,-4.14 0.804,-1.147 2.411,-4.509 3.572,-7.472 1.161,-2.964 3.429,-7.452 5.039,-9.976 1.611,-2.523 2.943,-5.448 2.959,-6.5 0.026,-1.638 0.163,-1.687 0.95,-0.341 0.506,0.864 1.446001,6.603 2.090001,12.753 1.281,12.237 0.784,14.176 -3.637001,14.176 -1.277,0 -3.5,1.014 -4.941,2.253 -4.913,4.226 -0.592,7.747 9.508001,7.747 3.248,0 6.94,-0.471 8.205,-1.047 5.252,-2.393 7.51,-10.7 12.444,-45.77 0.443,-3.146 0.631,-3.281 3.659,-2.634 1.756,0.375 3.642,1.01 4.192,1.411 4.364,3.183 31.35,4.989 32.293,2.161 0.205,-0.616 1.017,-1.121 1.804,-1.121 0.787,0 2.212,-0.397 3.167,-0.883 8.422,-4.285 9.011,-4.142 12.527,3.045 1.44,2.943 4.669,7.823 7.176,10.844 2.508,3.022 4.962,5.993 5.454,6.603 2.231,2.767 5.078,9.568 5.064,12.101 -0.024,4.227 -1.343,5.563 -8.199,8.302 -5.358,2.14 -6.286,2.879 -6.286,5 0,2.47 0.067,2.488 9.16,2.488 8.689,0 9.351,-0.154 12.862,-3 4.026,-3.264 10.4,-13.713 10.448,-17.129 0.017,-1.171 -1.141,-4.688 -2.573,-7.814 -1.431,-3.127 -2.315,-5.972 -1.964,-6.323 0.351,-0.352 2.937,1.66 5.747,4.47 4.246,4.246 5.233,5.925 5.843,9.944 1.032,6.802 0.113,8.487 -5.618,10.3 -3.856,1.22 -4.977,2.063 -5.242,3.939 -0.186,1.313 0.264,2.768 1,3.235 1.547,0.981 14.215,0.994 17.691,0.018 2.811,-0.789 5.11,-6.251 7.102,-16.867 l 1.356,-7.228 -3.542,-5.772 c -1.948,-3.175 -4.831,-8.923 -6.406,-12.773 -2.471,-6.039 -2.844,-8.21 -2.719,-15.811 0.079,-4.846 0.427,-9.094 0.773,-9.44 0.345,-0.346 2.755,1.409 5.355,3.898 2.6,2.49 6.025,5.5 7.612,6.69 3.203,2.402 8.328,2.83 10.929,0.913 1.521,-1.122 1.082,-1.855 -4.278,-7.142 -3.449,-3.401 -6.468,-7.416 -7.142,-9.5 -2.472,-7.635 -9.463,-20.594 -13,-24.096 -3.885,-3.846 -15.142,-11.012 -17.299,-11.012 -0.694,0 -1.583,-0.322 -1.977,-0.715 -2.226,-2.227 -12.278,-3.443 -35.118,-4.25 -16.266,-0.575 -26.747,-1.386 -30,-2.323 -2.75,-0.791 -8.15,-2.01 -12,-2.707 -3.85,-0.698 -9.925,-2.367 -13.5,-3.71 -3.575,-1.3429999 -8.525,-3.1329999 -11,-3.9769999 -2.475,-0.845 -4.964,-1.91 -5.531,-2.368 -1.391001,-1.122 -15.223001,-3.96200003 -18.969001,-3.89400003 -1.65,0.03 -6.15,0.855 -10,1.83400003"
     stroke="none"
     fill="#7a5d47"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
