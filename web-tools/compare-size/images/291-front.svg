<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="316.63425"
   height="805.82953"
   viewBox="0 0 316.63425 805.82953"
   version="1.1"
   id="svg1"
   sodipodi:docname="Double_Bass-front.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.63235294"
     inkscape:cx="158.93023"
     inkscape:cy="403.25581"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 151.83224,1.336 c -0.167,0.55 -0.59,3.137 -0.94,5.75 -0.594,4.439 -0.827,4.75 -3.561,4.75 -2.398,0 -3.189,0.631 -4.388,3.5 -1.279,3.063 -1.903,3.5 -4.994,3.5 -2.947,0 -3.637,0.42 -4.169,2.537 -0.35,1.396 0.014,4.883 0.808,7.75 1.423,5.134 1.508,5.218 5.618,5.52 4.161,0.307 4.173,0.319 4.173,4.367 0,3.826 0.148,4.031 2.585,3.565 2.26,-0.432 2.502,-0.227 1.929,1.634 -0.361,1.17 -1.123,3.927 -1.694,6.127 -0.57,2.2 -2.088,4.969 -3.372,6.154 -2.159,1.991 -5.843,12.618 -4.752,13.708 0.868,0.869 1.01,18.638 0.149,18.638 -0.465,0 -0.845,1.538 -0.845,3.417 0,1.879 -0.392,3.566 -0.87,3.75 -0.494,0.189 -0.49,3.798 0.008,8.333 0.483,4.4 1.152,10.813 1.487,14.25 0.576,5.917 1.165,7.127 2.716,5.576 0.37,-0.371 1.818,-0.724 3.216,-0.785 l 2.543,-0.111 -0.562,7.535 c -0.309,4.144 -1.018,21.035 -1.576,37.535 -0.557,16.5 -1.449,41.475 -1.981,55.5 -0.533,14.025 -1.269,35.326 -1.636,47.336 -0.662,21.614 -0.692,21.846 -2.979,22.715 -2.368,0.9 -2.824,2.088 -3.845,10.017 -1.002,7.776 -5.547,15.816 -12.68,22.432 -6.987,6.481 -10.017,8.614 -31.341001,22.071 -7.7,4.858 -15.764,10.1 -17.921,11.646 -17.826,12.788 -28.569,28.553 -31.633,46.419 -1.946,11.346 0.164,30.939 5.089,47.252 3.516,11.649 3.41,15.241 -0.592,19.998 -2.175,2.584 -2.331,3.265 -1.281,5.569 1.014,2.226 1.635,2.529 4.086,1.991 2.402,-0.528 2.985,-0.269 3.457,1.534 0.469,1.794 1.018,2.042 3.181,1.436 5.814,-1.628 7.247,-1.107 10.718,3.902 4.673,6.742 5.593,10.425 6.134,24.554 0.587,15.318 -1.273,25.704 -7.945,44.364 -2.672,7.472 -9.983,16.114 -15.5,18.32 -4.667,1.867 -10.101,1.387 -14.196,-1.253 -2.255,-1.454 -2.513,-1.404 -4.208,0.824 -1.47,1.933 -2.137,2.168 -3.595,1.266 -1.494,-0.925 -2.082,-0.626 -3.565,1.812 -1.726,2.838 -1.715,3.006 0.378,5.946 4.423,6.211 2.387,15.686 -7.984,37.157 -5.13,10.622 -9.7259997,23.937 -13.3199997,38.59 -1.71899998,7.009 -2.12199998,11.843 -2.17499998,26.102 -0.075,19.928 0.284,21.825 8.40999998,44.489 2.6569997,7.409 3.1359997,8.337 8.7799997,17.011 14.317,22.002 35.418,37.654 63.202,46.882 14.046,4.665 22.470001,6.314 41.480001,8.119 8.8,0.835 17.919,1.964 20.264,2.509 5.672,1.317 32.236,1.309 32.236,-0.01 0,-0.594 3.707,-1 9.122,-1 17.905,0 45.642,-5.59 62.127,-12.521 15.5,-6.517 32.21,-17.877 42.837,-29.125 6.508,-6.887 14.415,-19.867 19.507,-32.022 6.976,-16.651 7.501,-19.423 8.113,-42.866 l 0.549,-21.035 -3.555,-11.465 c -6.233,-20.102 -8.192,-25.331 -15.16,-40.466 -6.769,-14.701 -8.255,-23.787 -4.839,-29.572 2.111,-3.573 0.816,-8.527 -2.16,-8.263 -1.022,0.091 -2.657,-0.809 -3.634,-2 -1.582,-1.928 -2.021,-2.016 -4.004,-0.806 -3.539,2.161 -13.019,2.649 -16.498,0.85 -3.948,-2.041 -11.741,-10.468 -14.165,-15.317 -8.319,-16.639 -12.633,-39.141 -10.288,-53.665 1.239,-7.674 4.706,-16.086 8.08,-19.601 2.051,-2.139 2.903,-2.325 8.562,-1.871 4.904,0.394 6.406,0.187 6.84,-0.944 0.345,-0.898 1.277,-1.22 2.452,-0.847 1.472,0.467 2.142,-0.104 2.997,-2.558 0.998,-2.864 0.821,-3.479 -1.891,-6.568 -3.799,-4.327 -3.87,-8.048 -0.401,-21.086 1.425,-5.356 2.747,-9.99 2.937,-10.298 0.19,-0.308 1.111,-6.579 2.045,-13.935 1.602,-12.617 1.601,-13.883 -0.02,-22.308 -2.05,-10.652 -4.001,-15.459 -9.926,-24.457 -6.849,-10.4 -17.392,-19.735 -34.127,-30.215 -16.115,-10.093 -32.536,-21.428 -37.592,-25.95 -6.602,-5.904 -10.793,-13.843 -12.274,-23.251 -0.915,-5.809 -1.438,-7.002 -3.274,-7.463 -1.988,-0.498 -2.244,-1.382 -2.816,-9.712 -0.63,-9.157 -1.646,-42.705 -3.52,-116.163 -0.547,-21.45 -1.198,-40.463 -1.446,-42.25 -0.404,-2.901 -0.191,-3.25 1.985,-3.25 2.413,0 2.439,-0.1 2.605,-10.25 0.093,-5.638 0.345,-8.562 0.56,-6.5 0.233,2.222 0.926,3.75 1.701,3.75 0.911,0 1.499,-2.353 1.936,-7.75 0.605,-7.46 0.991,-22.217 0.608,-23.25 -0.853,-2.304 -0.704,-18.619 0.179,-19.684 0.751,-0.905 0.772,-1.707 0.066,-2.566 -0.564,-0.687 -1.182,-2.375 -1.372,-3.75 -0.235,-1.697 -1.069,-2.603 -2.596,-2.82 -1.763,-0.25 -2.25,-0.969 -2.25,-3.321 0,-1.651 0.675,-3.677 1.5,-4.502 0.825,-0.825 1.5,-3.057 1.5,-4.96 0,-3.344 0.119,-3.452 3.562,-3.22 4.612,0.311 5.404,-1.058 5.423,-9.37 l 0.015,-6.692 -4.192,-0.308 c -3.823,-0.28 -4.267,-0.602 -5.056,-3.662 -0.774,-3.005 -1.171,-3.31 -3.808,-2.923 -2.639,0.387 -2.944,0.152 -2.944,-2.27 0,-1.486 -0.274,-4.071 -0.609,-5.745 l -0.608,-3.043 -7.514,0.168 c -4.132,0.092 -7.649,0.618 -7.816,1.168"
     stroke="none"
     fill="#e2d9d5"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
