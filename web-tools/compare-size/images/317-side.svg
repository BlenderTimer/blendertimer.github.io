<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="1086.377"
   height="136.414"
   viewBox="0 0 1086.377 136.414"
   version="1.1"
   id="svg1"
   sodipodi:docname="Basilosaurus_Cetoides-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.39083558"
     inkscape:cx="546.26552"
     inkscape:cy="66.524138"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 215.80822,0.47965235 c -27.131,1.04400005 -56.46,3.31800005 -76.053,5.89700005 -7.975,1.049 -19.107,2.418 -24.738,3.042 -5.631,0.6239996 -15.306003,2.4329996 -21.500003,4.0199996 -6.194,1.587 -18.012,3.871 -26.262,5.075 -30.905,4.513 -62.8399995,15.089 -66.56099951,22.043 -3.01699999,5.636 4.06800001,9.444 16.04399951,8.624 7.065,-0.485 8.017,-0.35 8.017,1.133 0,2.023 -2.901,4.67 -6.143,5.606 -2.578,0.745 -8.483,3.149 -10.8569995,4.42 -1.956,1.048 -2.495,5.801 -0.879,7.748 1.354,1.631 0.972,1.644 20.0709995,-0.67 l 10.693,-1.295 8.307,5.523 c 10.378,6.9 18.586,11.042 26.265,13.255 5.03,1.45 6.903,2.706 12.037,8.073 8.653,9.044998 12.583,10.121998 24.006003,6.583 4.544,-1.408 9.518,-1.895 20.5,-2.009 21.05,-0.217 67.278,-1.913 99.275,-3.642 111.167,-6.005 152.665,-6.968 239.725,-5.562 70.026,1.131 96.523,2.231 111.739,4.637 10.857,1.717 55.75,2.047 61.268,0.45 1.921,-0.556 10.468,-2.018 18.993,-3.25 14.818,-2.14 18.252,-2.234 78,-2.135 90.194,0.151 124.097,2.544 189.5,13.374998 24.618,4.077 58.922,8.555 88.99998,11.618 l 17,1.731 16.836,8.92 c 23.31,12.349 31.376,14.897 35.165,11.108 4.501,-4.501 -5.034,-17.047 -20.042,-26.371 -1.673,-1.04 -8.198,-3.253 -14.5,-4.919 -6.302,-1.665 -28.109,-8.693998 -48.459,-15.618998 -62.58198,-21.297 -77.71498,-25.957 -106.99998,-32.948 -33.653,-8.035 -57.386,-12.913 -73.026,-15.012 -47.076,-6.316 -67.341,-8.372 -107.974,-10.958 -63.653,-4.05 -85.375,-5.776 -90.5,-7.192 -4.544,-1.255 -6.564,-2.623 -11.622,-7.869 l -6.123,-6.3499996 -5.877,1.388 c -3.233,0.764 -10.603,2.7599996 -16.378,4.4349996 -9.55,2.771 -11.812,3.047 -25,3.051 -14.34,0.005 -40.946,-1.682 -71,-4.5 -28.164,-2.6399996 -90.167,-7.3769996 -110.5,-8.4409996 -56.163,-2.93800005 -128.381,-4.28600005 -161.447,-3.01300005"
     stroke="none"
     fill="#bdb4b4"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
