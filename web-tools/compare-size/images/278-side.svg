<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="421.93323"
   height="87.885696"
   viewBox="0 0 421.93323 87.885696"
   version="1.1"
   id="svg1"
   sodipodi:docname="Tylosaurus_Proriger-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.94155844"
     inkscape:cx="206.57241"
     inkscape:cy="55.227586"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 116.12204,1.9676876 c -5.5,0.972 -13.15,2.494 -16.999997,3.384 -15.793,3.649 -33.722,6.6420004 -45.5,7.5970004 -10.007,0.811 -14.394,1.695 -22,4.429 -5.225,1.879 -14,4.598 -19.5,6.042 -13.03300013,3.423 -13.7370001,4.11 -10.4930001,10.251 3.067,5.808 5.262,6.645 22.8200001,8.71 9.126,1.074 15.408,2.471 22.445,4.994 5.845,2.096 14.284,4.148 21,5.106 6.175,0.882 15.278,2.736 20.228,4.121 4.95,1.384 12.352997,2.803 16.450997,3.154 l 7.452,0.636 7.635,9.853 c 10.171,13.124 17.089,17.626 27.11,17.641 6.237,0.01 19.852,-8.306 19.852,-12.125 0,-0.561 -1.197,-1.999 -2.66,-3.195 -3.755,-3.07 -11.317,-11.028 -11.329,-11.924 -0.006,-0.412 1.106,-0.75 2.47,-0.75 3.016,0 13.581,-1.595 27.019,-4.079 5.5,-1.016 15.4,-2.534 22,-3.373 6.6,-0.838 15.15,-2.228 19,-3.088 11.824,-2.642 13.394,-2.793 15.019,-1.445 0.844,0.701 3.545,5.463 6.002,10.583 2.898,6.037 5.648,10.25 7.827,11.988 6.86,5.474 22.122,10.303 26.002,8.227 1.566,-0.839 1.793,-1.752 1.31,-5.279 l -0.585,-4.266 6.474,-0.663 c 3.56,-0.365 7.593,-1.089 8.962,-1.609 5.386,-2.048 1.851,-7.756 -10.427,-16.836 -4.112,-3.041 -7.051,-5.653 -6.53,-5.805 5.976,-1.743 25.27,-4.718 38.446,-5.928 9.075,-0.834 18.975,-1.958 22,-2.498 10.978,-1.96 32.929,-2.263 40.867,-0.564 12.128,2.595 15.504,6.227 19.589,21.077 2.663,9.677 3.882,12.152 6.3,12.784 3.235,0.846 5.942,-0.97 8.104,-5.438 3.742,-7.729 4.844,-14.259 8.145,-48.288 0.587,-6.0500004 1.163,-11.9000004 1.281,-13.0000004 0.167,-1.56200004 -0.464,-2.06600004 -2.883,-2.30200004 -2.535,-0.247 -4.622,0.903 -11.5,6.33800004 -4.622,3.6520004 -9.733,7.3350004 -11.358,8.1840004 -4.755,2.483 -20.018,3.137 -51.545,2.208 -43.639,-1.285 -74.929,-3.629 -99.5,-7.4520004 -11.239,-1.748 -42.493,-5.064 -61,-6.471 -7.7,-0.586 -18.05,-1.523 -23,-2.08200004 -12.752,-1.442 -33.281,-0.916 -45,1.15300004"
     stroke="none"
     fill="#b7b3ae"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
