<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="325.67072"
   height="181.06543"
   viewBox="0 0 325.67072 181.06543"
   version="1.1"
   id="svg1"
   sodipodi:docname="Stegotetrabelodon_Syrticus-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.1693548"
     inkscape:cx="137.25517"
     inkscape:cy="91.503448"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 91.9819,1.691432 c -1.908,0.939 -8.673,6.891 -15.034,13.227 0,0 -8.378908,7.108889 -11.566,11.519 -9.12915,12.632383 -17.489794,26.609796 -20.931,41.811 -1.044452,4.613767 0.268,14.189 0.268,14.189 l 0.268,14.19 -7.85,6.904998 c -8.949,7.871 -15.09,12.383 -23.686,17.402 -12.1249995,7.079 -15.6789995,10.003 -12.1599995,10.003 1.271,0 15.5439995,-7.056 24.1599995,-11.943 3.831,-2.173 3.895,-2.179 1.5,-0.128 -1.375,1.177 -7.653,5.61 -13.952,9.851 -12.54899959,8.45 -13.00199959,10.93 -0.87,4.767 10.228,-5.197 21.354,-13.334 28.696,-20.987 3.506,-3.655 6.493,-6.514 6.637,-6.353 0.257,0.285 2.806,17.743 4.497,30.793 0.9,6.943 2.08,11.427 3.905,14.838 0.926,1.73 0.49,3.99 -2.39,12.374 -4.953,14.423 -4.459,17.165 1.107,6.152 1.353,-2.675 2.247,-3.964 1.988,-2.864 -1.298,5.502 -1.704,10.5 -0.855,10.5 0.516,0 2.237,-3.937 3.824,-8.75 1.587,-4.812 2.935,-8.868 2.996,-9.013 0.06,-0.145 1.74,0.418 3.731,1.25 1.992,0.832 5.825,1.513 8.517,1.513 h 4.895 l -1.489,-4.522 c -1.421,-4.316 -1.631,-4.495 -4.626,-3.933 -2.508,0.471 -3.61,0.085 -5.496,-1.922 -2.615,-2.784 -2.605,-2.995 0.732,-16.123 2.084,-8.194 5.36,-22.098 7.305,-31 0.601,-2.75 1.458,-5.899998 1.905,-6.999998 0.446,-1.1 1.787,-4.925 2.979,-8.5 1.193,-3.575 3.436,-9.237 4.986,-12.582 2.631,-5.682 3.453,-6.49 12.456,-12.25 5.302,-3.393 10.267,-6.168 11.034,-6.168 5.45,0 13.126,9.855 17.026,21.858 1.856,5.715 1.626,16.171 -0.603,27.315998 -0.586,2.929 -1.458,7.576 -1.938,10.326 -0.48,2.75 -2.025,10.92 -3.435,18.156 -1.409,7.236 -2.562,14.691 -2.562,16.568 0,5.478 -2.719,13.106 -5.814,16.31 -5.018,5.196 -6.603,8.259 -5.168,9.988 1.683,2.028 25.904,1.844 26.69,-0.203 0.273,-0.713 -0.041,-3.539 -0.699,-6.28 -1.21,-5.044 -0.897,-6.74 3.097,-16.789 0.492,-1.238 1.286,-3.262 1.764,-4.5 0.479,-1.238 4.404,-9.403 8.722,-18.145 l 7.851,-15.895 1.765,5.895 c 0.971,3.242 1.779,7.695 1.796,9.895 0.034,4.457 2.855,16.14 5.193,21.507 4.519,10.373 4.875,13.114 1.973,15.186 -2.515,1.796 -5.444,6.486 -4.959,7.94 0.451,1.354 1.931,1.624 13.548,2.475 10.806,0.791 13.243,0.169 13.235,-3.377 -0.004,-1.502 -0.629,-3.924 -1.39,-5.382 -0.973,-1.867 -1.723,-10.451 -2.532,-29 -0.632,-14.492 -1.392,-27.585 -1.689,-29.096 -0.607,-3.085 1.259,-9.753 2.73,-9.753 0.526,0 1.972,0.665 3.212,1.478 5.075,3.324 17.983,6.522 26.331,6.522 9.502,0 11.344,0.508 11.344,3.126 0,1.051 1.35,4.442 3,7.534 1.65,3.092 3,6.837 3,8.322 0,1.485 0.67,4.909 1.489,7.609 1.857,6.123 1.865,8.842 0.04,13.909 -0.793,2.2 -1.461,6.32 -1.485,9.155 -0.038,4.394 -0.561,5.775 -3.544,9.345 -2.274,2.722 -3.5,5.23 -3.5,7.159 v 2.969 l 15.25,-0.314 15.25,-0.314 -0.205,-4.5 c -0.113,-2.475 -0.338,-12.375 -0.5,-22 -0.256,-15.179 -0.033,-18.33 1.679,-23.759 1.086,-3.442 2.417,-6.111 2.959,-5.93 2.761,0.92 8.885,13.529 10.754,22.141 3.385,15.596 3.446,20.366 0.34,26.495 -1.725,3.404 -2.339,5.641 -1.719,6.261 1.342,1.342 15.732,2.205 22.549,1.353 6.296,-0.787 6.907,-1.926 4.237,-7.91 -0.773,-1.733 -1.659,-6.856 -1.967,-11.385 -0.309,-4.529 -1.309,-10.806 -2.223,-13.948 -2.983,-10.261 -0.507,-28.125 8.913,-64.317998 l 1.172,-4.5 0.222,4.5 c 0.54,10.924 2.484,30.807998 3.331,34.064998 1.188,4.568 10.353,19.903 13.246,22.163 1.217,0.95 3.705,1.738 5.529,1.75 2.98,0.02 3.248,-0.207 2.635,-2.228 -0.94,-3.1 -4.092,-6.358 -7.528,-7.781 -1.583,-0.656 -4.409,-3.505 -6.281,-6.331 0,0 -2.79088,-3.17707 -3.403,-5.138 -2.48364,-7.95639 -0.504,-24.999998 -0.504,-24.999998 -0.541,-26.834 -1.277,-31.678 -6.351,-41.767 -5.098,-10.139 -9.308,-14.742 -19.572,-21.403 -5.379,-3.49 -11.924,-7.198 -14.546,-8.239 -2.622,-1.042 -7.692,-3.233 -11.267,-4.871 -8.415,-3.853 -21.497,-7.934 -32.5,-10.138 -2.75,-0.55 -15.064,-1.474 -27.365,-2.051 -12.301,-0.578 -25.474,-1.563 -29.274,-2.191 -5.764,-0.952 -8.736,-0.848 -17.947,0.629 -10.547,1.691 -11.469,1.692 -20.726,0.009 -5.328,-0.969 -12.145,-2.373 -15.148,-3.12 -7.52,-1.86999997 -16.76,-1.69599997 -21.009,0.396 m -21.37,72.496 c -2.719,4.769 -4.729,19.082 -4.569,32.535998 l 0.092,7.714 1.825,-8.979 c 1.004,-4.939 1.655,-9.255998 1.446,-9.592998 -0.41,-0.664 2.859,-17.368 4.439,-22.678 1.364,-4.586 -0.35,-4.055 -3.233,1"
     stroke="none"
     fill="#29241d"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1"
     sodipodi:nodetypes="ccssccccscccccccccccscccsccccccccccsccscsccccccccccccccccccscssssccccsccccccccsscccccccccccccsscccccccccccccccccc" />
</svg>
