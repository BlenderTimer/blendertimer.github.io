<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="304.84717"
   height="122.27062"
   viewBox="0 0 304.84717 122.27062"
   version="1.1"
   id="svg1"
   sodipodi:docname="Parasaurolophus_Walkeri-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.2794118"
     inkscape:cx="152.8046"
     inkscape:cy="57.057471"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 180.6116,0.5461825 c -3.3,0.443 -11.85,0.868 -19,0.946 -16.451,0.179 -24.036,1.22 -39.5,5.42 -7.357,1.998 -19.711,5.0160005 -29.5,7.2070005 -15.552,3.481 -28.145,10.744 -36.514,21.059 -4.851,5.98 -11.453,11.39 -13.898,11.39 -0.523,0 -3.756,-3.937 -7.184,-8.75 -3.428,-4.812 -7.111,-9.735 -8.185,-10.938 l -1.951,-2.188 3.866,-1.668 c 2.126,-0.918 6.904,-1.906 10.618,-2.197 6.209,-0.486 7.078,-0.303 10.796,2.275 3.513,2.434 4.233,2.614 5.479,1.367 1.247,-1.246 1.175,-1.862 -0.546,-4.693 -2.744,-4.51 -5.905,-5.414 -17.622,-5.036 -9.927,0.321 -10.347,0.433 -19.923,5.328 -12.5229998,6.402 -21.3909998,14.5 -15.8769998,14.5 0.857,0 1.269,0.47 0.914,1.044 -1.363,2.205 1.754,3.956 7.044,3.956 7.3939998,0 10.5719998,3.1 13.3879998,13.058 2.677,9.468 6.623,17.403 9.635,19.376 1.293,0.847 6.988,2.88 12.655,4.517 7.528,2.175 10.709,3.586 11.805,5.239 0.825,1.245 2.73,3.674 4.234,5.4 l 2.733,3.137 -5.903,5.631 c -3.247,3.097 -7.086,6.079997 -8.532,6.629997 -1.624,0.617 -3.222,2.435 -4.18,4.756 -0.853,2.066 -2.276,4.571 -3.162,5.567 -1.326,1.492 -1.372,1.959 -0.257,2.648 0.764,0.472 1.122,1.724 0.821,2.874 -0.563,2.151 0.856,3.167 4.421,3.167 1.167,0 2.231,-0.835 2.532,-1.989 0.286,-1.094 0.919,-1.742 1.407,-1.441 0.487,0.302 0.886,-0.792 0.886,-2.429 0,-4.702 0.885,-5.991 6.875,-10.015 8.694,-5.838997 8.635,-5.824997 6.339,-1.527 -3.091,5.785 -4.949,10.496 -5.604,14.208 l -0.583,3.307 4.099,-0.307 4.098,-0.307 3.215,-9 c 1.768,-4.95 3.724,-9.9 4.348,-11 2.732,-4.821997 7.213,-14.825997 7.213,-16.102997 0,-0.985 1.301,-1.397 4.412,-1.397 5.543,0 17.677,-2.303 23.588,-4.477 2.475,-0.911 5.218,-1.885 6.096,-2.166 1.599,-0.511 6.301,8.106 14.958,27.410997 l 3.259,7.268 -3.157,4.396 c -1.736,2.417 -3.156,4.894 -3.156,5.504 0,0.758 2.299,0.947 7.25,0.597 8.666,-0.613 11.316,-2.728 10.334,-8.248 -0.321,-1.807 -0.87,-4.962 -1.22,-7.012 -0.35,-2.049 -1.733,-5.385 -3.075,-7.411997 -1.47,-2.221 -2.31,-4.751 -2.114,-6.368 0.315,-2.601 0.513,-2.49 6.624,3.713 3.465,3.516997 7.141,7.677997 8.17,9.246997 1.85,2.819 1.843,2.915 -0.573,8.378 -1.344,3.039 -2.32,5.829 -2.17,6.2 0.151,0.371 3.199,0.077 6.774,-0.655 7.987,-1.634 10.44,-4.056 9.7,-9.576 -0.275,-2.052 -1.445,-4.932 -2.6,-6.4 -1.155,-1.468 -2.1,-3.656 -2.1,-4.860997 0,-1.204 -1.186,-3.281 -2.636,-4.615 -6.126,-5.635 -8.364,-9.898 -8.364,-15.934 0,-4.443 -0.555,-6.529 -2.5,-9.395 -2.965,-4.37 -3.07,-5.188 -0.75,-5.894 10.714,-3.259 16.415,-6.949 28.954,-18.743 8.67,-8.156 12.311,-10.341 23.118,-13.872 12.244,-4.001 45.381,-12.643 61.678,-16.084 2.2,-0.465 7.15,-1.582 11,-2.483 13.418,-3.1400005 15.041,-3.4500005 21.5,-4.1060005 3.575,-0.363 7.625,-1.157 9,-1.763 2.055,-0.907 0.185,-1.221 -10.5,-1.763 -91.067,-4.623 -104.27,-5.08 -113,-3.909"
     stroke="none"
     fill="#ccb39d"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
