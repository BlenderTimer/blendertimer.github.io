<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="503.24802"
   height="227.7347"
   viewBox="0 0 503.24802 227.7347"
   version="1.1"
   id="svg1"
   sodipodi:docname="Bicolour_Parrotfish-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.80705009"
     inkscape:cx="250.91379"
     inkscape:cy="116.47356"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 179.69543,2.0690621 c -3.85,1.112 -9.235,2.368 -11.967,2.789 -4.388,0.678 -5.593,1.456 -10.337,6.6689999 -3.095,3.4 -7.065,9.397 -9.369,14.151 l -3.998,8.25 h -4.28 c -4.298,0 -21.505,3.577 -31.291,6.504 -15.003005,4.489 -44.508005,18.351 -60.258005,28.311 -3.575,2.261 -10.553,6.552 -15.506,9.537 -15.533,9.359 -26.2739998,18.709 -30.4019998,26.464998 -2.01500002,3.784 -2.94200002,12.063 -1.77600002,15.862 2.93900002,9.574 35.68499982,31.45 62.67099982,41.868 17.471,6.744 58.739005,19.564 68.774005,21.364 8.654,1.552 10.66,2.259 11.985,4.227 2.717,4.032 26.51,27.84 31.254,31.273 4.357,3.153 12.597,6.837 18.255,8.163 2.455,0.575 2.918,0.255 4.25,-2.932 0.822,-1.968 1.495,-5.641 1.495,-8.162 0,-6.818 -2.815,-17.929 -5.573,-21.992 -1.335,-1.967 -2.427,-3.74 -2.427,-3.939 0,-0.199 2.363,-0.647 5.25,-0.996 6.578,-0.794 14.137,-1.851 33.637,-4.7 l 15.386,-2.248 2.359,2.947 c 1.297,1.622 2.36,3.462 2.363,4.09 0.003,0.629 2.686,3.625 5.963,6.658 4.606,4.265 7.044,5.741 10.75,6.506 5.498,1.135 33.753,-0.094 39.292,-1.71 1.925,-0.561 9.214,-2.597 16.199,-4.524 15.668,-4.323 19.307,-5.848 46.712,-19.572 13.578,-6.8 22.723,-11.99 24.01,-13.627 2.609,-3.316 2.641,-6.389 0.101,-9.618 -2.216,-2.817 -9.809,-6.722 -13.261,-6.818 l -2.261,-0.064 2.181,-0.879 c 5.003,-2.016 19.025,-2.283 28.668,-0.547 7.724,1.391 12.127,2.994 23.574,8.584 15.582,7.61 27.736,11.843 42.854,14.924 10.881,2.217 27.223,2.79 27.223,0.954 0,-0.599 -2.011,-3.444 -4.469,-6.321 -10.93,-12.794 -13.764,-26.351 -11.701,-55.987 1.854,-26.651998 6.113,-41.723998 14.778,-52.298998 4.52,-5.516 4.03,-5.715 -12.419,-5.05 -10.838,0.438 -14.386,1.036 -24.327,4.1 -29.066,8.959 -36.071,11.809 -53.524,21.78 -11.829,6.758 -13.01,7.212 -19.916,7.655 -7.595,0.487 -13.116,-0.461 -19.951,-3.428 l -3.971,-1.723 4.669,-0.724 c 14.456,-2.24 22.831,-7.24 22.831,-13.631 0,-2.848 -0.804,-4.256 -4.25,-7.447 -5.747,-5.32 -16.058,-12.01 -22.75,-14.76 -3.025,-1.243 -10.644,-4.941 -16.93,-8.218 -11.161,-5.818 -31.305,-12.846 -36.878,-12.866 -1.481,-0.005 -5.01,-1.089 -7.842,-2.407 -2.833,-1.319 -7.477,-2.617 -10.322,-2.884 -3.414,-0.32 -5.948,-1.215 -7.456,-2.632 -2.8,-2.63 -8.539,-3.6899999 -11.474,-2.12 -1.854,0.993 -2.642,0.773 -5.329,-1.4879999 -2.682,-2.257 -3.753,-2.557 -7.17,-2.011 -2.9,0.464 -4.923,0.154 -7.282,-1.116 -2.78,-1.497 -3.901,-1.588 -7.541,-0.61 -2.656,0.714 -4.636,0.795 -5.226,0.214 -0.522,-0.515 -3.126,-0.936 -5.785,-0.936 -2.781,0 -5.89,-0.691 -7.318,-1.627 -1.822,-1.194 -3.74,-1.468 -7.215,-1.031 -3.372,0.424 -5.29,0.173 -6.673,-0.873 -2.478,-1.87500003 -5.681,-1.86300003 -10.23,0.038 -2.578,1.077 -3.971,1.205 -4.883,0.448 -0.702,-0.583 -3.677,-0.95300003 -6.611,-0.823 -2.934,0.13 -6.01,-0.045 -6.835,-0.38900003 -0.825,-0.343 -4.65,0.285 -8.5,1.39800003"
     stroke="none"
     fill="#3f7176"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
