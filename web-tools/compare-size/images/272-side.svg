<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="657.89423"
   height="196.52538"
   viewBox="0 0 657.89423 196.52538"
   version="1.1"
   id="svg1"
   sodipodi:docname="Saurophaganax_Maximus-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.62054208"
     inkscape:cx="323.1046"
     inkscape:cy="78.963218"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 65,1.2519139 c -3.575,0.8 -9.818,3.144 -13.873,5.209 L 43.754,10.214914 42.255,7.9649139 c -1.942,-2.915 -3.356,-2.838 -6.331,0.342 -3.93,4.2020001 -5.795,4.8350001 -8.099,2.7490001 -1.959,-1.7720001 -2.08,-1.7390001 -4.793,1.297 -1.531,1.713 -2.951,3.523 -3.157,4.022 -0.206,0.499 -3.237,3.094 -6.734,5.766 -3.497,2.672 -7.885,6.385 -9.75,8.25 -3.019,3.018 -3.391,3.985 -3.391,8.798 0,3.248 0.499,5.717 1.25,6.181 2.86,1.768 18.745,-0.152 22.25,-2.689 0.954,-0.691 11.63,-3.966 12.929,-3.966 1.739,0 2.357,5.126 1.163,9.648 -1.889,7.159 -4.013,10.711 -10.896,18.227 -7.787,8.503 -9.478,11.478 -7.724,13.591 0.7,0.844 2.788,1.534 4.64,1.534 3.278,0 4.919,-1.188 16.688,-12.076 2.435,-2.253 7.097,-4.067 20.7,-8.054 10.117,-2.965 12.883,-3.37 23,-3.37 h 11.5 l 11.75,6.333 c 6.463,3.483 11.75,6.724 11.75,7.202 0,2.247 7.828,8.107 13.961,10.45 3.713,1.419 7.782,3.677 9.041,5.018 2.134,2.271 2.245,2.988 1.617,10.518 -0.385,4.608996 -1.736,10.900996 -3.147,14.648996 -1.359,3.612 -2.472,8.345 -2.472,10.516 0,3.494 -0.231,3.876 -2,3.314 -1.411,-0.448 -2,-0.18 -2,0.91 0,2.129 4.57,4.936 7.002,4.3 1.298,-0.34 1.998,-0.03 1.998,0.884 0,0.773 0.942,2.348 2.092,3.498 1.241,1.241 1.89,2.87 1.594,4 -0.356,1.362 0.023,1.908 1.325,1.908 1.248,0 2.382,-1.463 3.593,-4.634 l 1.77,-4.634 2.261,2.835 2.261,2.836 1.115,-2.931 c 0.657,-1.73 0.839,-4.93 0.442,-7.813 -0.386,-2.81 -0.231,-5.79 0.365,-7.021 0.57,-1.176 2.467,-6.558 4.216,-11.96 1.748,-5.403 3.736,-10.035996 4.416,-10.296996 0.681,-0.261 5.398,0.907 10.484,2.596996 5.673,1.885 13.554,3.547 20.39,4.302 l 11.143,1.229 4.017,7.995 c 2.209,4.398 5.49,9.992 7.292,12.432 5.177,7.009 6.615,13.55 5.866,26.669 -0.683,11.956 -1.958,16.222 -6.909,23.117 -3.538,4.926 -6.178,5.971 -17.233,6.82 -4.4,0.338 -9.179,1.059 -10.62,1.604 -2.861,1.08 -4.88,4.556 -4.88,8.4 0,2.113 0.451,2.445 3.25,2.394 1.787,-0.032 7.525,-0.035 12.75,-0.006 5.225,0.029 13.729,-0.236 18.898,-0.589 11.945,-0.814 13.614,-2.092 12.818,-9.812 -0.647,-6.266 1.333,-11.323 6.486,-16.566 4.948,-5.034 5.503,-9.745 2.303,-19.55 -3.162,-9.686 -3.163,-16.145 -0.005,-25.82 1.375,-4.212 2.5,-8.77 2.5,-10.128 0,-3.263 1.183,-3.123 3.256,0.388 2.699,4.569 11.505,10.559 21.58,14.68 9.117,3.73 19.174,10.37 24.391,16.106 14.964,16.451 16.127,18.382 17.382,28.857 0.527,4.399 0.299,5.322 -1.896,7.684 -1.503,1.617 -4.031,2.932 -6.354,3.306 -8.225,1.324 -14.262,5.994 -12.771,9.878 0.959,2.501 4.665,2.985 14.471,1.89 11.404,-1.273 19.645,-5.095 22.117,-10.258 0.922,-1.925 1.944,-7.203 2.272,-11.728 0.644,-8.888 0.527,-9.162 -5.748,-13.49 -3.048,-2.102 -6.698,-9.368 -6.705,-13.348 -0.008,-4.227 -3.739,-9.733 -9.495,-14.011 -7.056,-5.243 -14.39,-12.415 -16.182,-15.823 -2.707,-5.15 -7.246,-16.907 -6.803,-17.623996 0.237,-0.383 2.532,-0.985 5.101,-1.337 2.569,-0.352 8.984,-2.71 14.256,-5.241 11.565,-5.551 17.885,-6.937 38.128,-8.36 17.049,-1.199 27.841,-2.411 41.5,-4.661 11.79,-1.943 43.584,-8.311 44.586,-8.93 3.113,-1.924 41.548,-10.289 59.414,-12.932 52.916,-7.826 81.922,-5.636 117.884,8.901 8.946,3.616 19.021,8.911 21.399,11.247 0.706,0.693 3.181,2.629 5.5,4.302 2.319,1.672 7.977,7.09 12.572,12.038 4.595,4.948 8.982,8.996996 9.75,8.996996 1.684,0 1.678,0.116 0.217,-4.100996 -2.688,-7.756 -16.951,-24.586 -27.736,-32.727 -5.801,-4.38 -24.206,-14.473 -32.605,-17.882 -1.64,-0.665 -4.768,-1.95 -6.953,-2.856 -12.499,-5.181 -37.37,-11.354 -58.528,-14.528 -11.302,-1.695 -20.418,-2.113 -56,-2.569 -23.375,-0.299 -51.05,-0.136 -61.5,0.363 -16.44,0.785 -37.547,0.311 -44,-0.989 -1.1,-0.222 -4.7,-0.716 -8,-1.098 -12.146,-1.407 -56.249,-9.445 -74.5,-13.578 -4.675,-1.059 -15.025,-3.131 -23,-4.6050001 -13.559,-2.506 -15.701,-2.64 -33,-2.053 -10.175,0.344 -21.65,1.057 -25.5,1.583 -3.85,0.526 -17.35,2.4070001 -30,4.1800001 -15.553,2.18 -27.047,3.238 -35.5,3.266 -11.885,0.04 -12.864,-0.114 -19.893,-3.145 -4.066,-1.753 -9.049,-4.3350001 -11.073,-5.7370001 -2.024,-1.403 -6.348,-3.512 -9.607,-4.686 C 91.759,-0.21008607 74.454,-0.86408607 65,1.2519139"
     stroke="none"
     fill="#867565"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
