<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="419.55441"
   height="257.91907"
   viewBox="0 0 419.55441 257.91907"
   version="1.1"
   id="svg1"
   sodipodi:docname="Bison_Latifrons-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.0069444"
     inkscape:cx="210.04138"
     inkscape:cy="130.09655"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 64.541199,0.9235621 c -0.69,1.117 1.262,6.816 8.376,24.4499999 6.847,16.973 7.089,18.27 3.65,19.578 -1.478,0.561 -3.6,1.021 -4.717,1.021 -6.645,0 -15.563,4.419 -28.455,14.1 -4.11,3.086 -4.12,3.088 -7.5,1.348 -4.917,-2.532 -16.215,-14.352 -21.444,-22.434 -6.7990002,-10.51 -9.7070002,-18.93 -9.7620002,-28.264 -0.032,-5.3989999 -0.416,-7.7499999 -1.264,-7.7499999 -3.44899998,0 -4.658,18.6139999 -1.92,29.5399999 2.399,9.576 10.8870002,25.429 18.2080002,34.01 l 6.551,7.677 -4.127,8.251 c -2.269,4.538 -4.126,9.165 -4.126,10.283 0,1.119 1.524,5.117 3.386,8.885998 3.024,6.119 3.501,8.254 4.461,19.928 0.728,8.866 1.719,14.58 3.079,17.753 1.104,2.574 2.298,7.04 2.655,9.926 1.166,9.426 2.392,10.338 21.011,15.634 5.917,1.684 11.123,3.635 11.568,4.336 0.445,0.702 0.821,2.401 0.834,3.776 0.029,2.802 4.223,12.398 5.863,13.411 2.318,1.433 5.286,-2.195 8.277,-10.116 1.704,-4.513 4.622,-9.986 6.484,-12.162 4.768,-5.57 12.336,-9.133 19.400001,-9.133 5.142,0 6.433,0.509 15.053,5.937 18.079,11.383 16.932,10.243 16.905,16.803 -0.012,3.168 -0.912,9.105 -2,13.192 -1.297,4.88 -1.976,10.643 -1.976,16.782 0,9.897 -0.869,13.092 -5.352,19.676 -1.456,2.139 -2.648,4.554 -2.648,5.366 0,1.681 -5.854,10.147 -10.368,14.996 -3.786,4.066 -2.841,5.283 4.919,6.336 10.788,1.464 19.449,-1.467 19.449,-6.582 0,-1.36 0.944,-2.615 2.5,-3.324 2.23,-1.016 2.5,-1.739 2.5,-6.7 0,-6.418 3.026,-13.485 5.77,-13.476 0.952,0.003 3.48,0.491 5.618,1.085 2.487,0.69 4.109,0.73 4.5,0.11 0.337,-0.533 1.512,-1.14 2.612,-1.347 1.538,-0.291 2.035,-1.237 2.15,-4.093 0.082,-2.043 1.111,-5.701 2.286,-8.128 1.88,-3.884 2.702,-4.555 6.85,-5.589 2.593,-0.646 5.708,-1.819 6.924,-2.606 1.786,-1.157 2.745,-1.202 5,-0.232 1.534,0.659 2.993,1.348 3.241,1.531 0.413,0.304 1.002,3.919 2.652,16.263 0.822,6.158 -1.876,14.941 -6.17,20.08 -1.888,2.26 -3.433,4.541 -3.433,5.068 0,0.527 -1.122,2.609 -2.493,4.627 -3.614,5.318 -2.088,6.397 9.309,6.58 7.758,0.124 9.435,-0.152 11.86,-1.957 1.553,-1.156 3.274,-3.406 3.824,-5 0.55,-1.594 1.845,-3.601 2.877,-4.46 1.564,-1.302 1.853,-2.836 1.731,-9.179 -0.093,-4.787 0.277,-7.879 0.996,-8.323 0.629,-0.389 3.9,-0.804 7.27,-0.922 8.286,-0.291 10.359,-1.105 12.315,-4.835 1.54,-2.937 1.939,-5.878 2.576,-19.01 0.158,-3.243 0.81,-5.251 1.985,-6.11 2.166,-1.583 2.253,-3.429 0.198,-4.217 -1.136,-0.436 -1.38,-1.376 -0.911,-3.51 0.391,-1.782 0.145,-3.51 -0.634,-4.449 -0.996,-1.2 -1.008,-1.7 -0.055,-2.289 0.671,-0.415 0.949,-1.46 0.618,-2.323 -0.861,-2.244 0.961,-2.989 3.963,-1.621 3.479,1.585 4.327,0.4 2.241,-3.131 -1.639,-2.775 -1.636,-2.966 0.053,-3.852 0.977,-0.513 3.805,-0.967 6.284,-1.008 2.479,-0.042 6.517,-0.786 8.975,-1.653 3.185,-1.123 8.28,-1.585 17.752,-1.606 l 13.285,-0.031 2.534,3.012 c 3.461,4.113 6.331,4.906 8.354,2.308 1.187,-1.524 3.934,-2.443 10.777,-3.606 10.16,-1.726 17.571,-4.324 23.141,-8.112 3.368,-2.291 3.728,-2.352 4.306,-0.735 2.71,7.581 7.219,19.155 10.231,26.264 6.227,14.698 4.99,23.382 -6.043,42.389 -3.254,5.607 -7.347,10.645 -13.257,16.318 -6.573,6.31 -8.276,8.479 -7.368,9.387 0.737,0.737 5.003,1.224 11.331,1.294 9.93,0.11 10.196,0.053 12.349,-2.638 1.211,-1.512 3.015,-2.75 4.009,-2.75 3.861,0 7.305,-3.708 7.974,-8.586 0.55,-4.014 4.121,-13.317 9.18,-23.914 4.385,-9.183 13.247,-24.928 14.212,-25.25 1.431,-0.477 3.238,5.96 3.245,11.558 0.011,7.927 -4.155,29.408 -6.41,33.057 -0.304,0.49 -2.139,1.645 -4.079,2.566 -1.94,0.92 -4.29,2.887 -5.222,4.371 -0.932,1.484 -3.012,4.243 -4.62,6.132 l -2.926,3.435 2.35,1.902 c 2.029,1.643 3.694,1.857 12.213,1.566 10.652,-0.364 12.7,-1.416 12.7,-6.528 0,-1.775 0.559,-2.309 2.417,-2.309 1.329,0 2.621,0.563 2.871,1.25 0.343,0.942 0.918,0.978 2.333,0.146 1.526,-0.896 1.998,-2.773 2.514,-10 0.763,-10.693 3.888,-27.593 7.377,-39.896 4.83,-17.032 6.488,-23.467 6.488,-25.184 0,-0.946 -1.274,-3.092 -2.831,-4.768 -1.556,-1.677 -4.307,-6.423 -6.112,-10.548 -2.862,-6.539 -3.207,-8.221 -2.697,-13.132 0.832,-8.012 2.836,-14.868 4.347,-14.868 0.711,0 1.349,0.9 1.418,2 0.069,1.1 0.238,2.45 0.375,3 0.137,0.55 0.306,2.602 0.375,4.559 0.186,5.292 1.73,3.333 3.101,-3.933 1.006,-5.329 1.862,-7.039 5.122,-10.222 5.741,-5.606 7.638,-11.707 7.43,-23.904 -0.125,-7.366998 -0.635,-10.887998 -1.938,-13.372998 -1.431,-2.73 -1.638,-4.668 -1.086,-10.172 1.959,-19.501 -9.785,-29.56 -38.98,-33.389 -9.571,-1.255 -12.332,-2.048 -18.023,-5.176 -5.772,-3.173 -8.008,-3.802 -15.86,-4.466 -11.051,-0.934 -17.042,-2.053 -26.763,-4.999 -4.058,-1.23 -10.303,-2.777 -13.878,-3.437 -3.575,-0.66 -21.575,-5.948 -40,-11.751 -48.175,-15.1729999 -52.301,-16.0449999 -75,-15.8499999 -23.763,0.203 -48.048,4.326 -66.043,11.2119999 -13.7,5.243 -16.707,7.861 -26.162001,22.776 -2.031,3.203 -2.211,3.279 -3.547,1.5 -0.774,-1.031 -2.525,-4.054 -3.892,-6.718 -1.366,-2.663 -5.4,-8.738 -8.964,-13.5 -12.268,-16.3909999 -13.408,-17.5579999 -14.862,-15.2059999"
     stroke="none"
     fill="#b29e96"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
