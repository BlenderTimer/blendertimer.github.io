<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="624.92291"
   height="373.99289"
   viewBox="0 0 624.92291 373.99289"
   version="1.1"
   id="svg1"
   sodipodi:docname="trace (1).svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.6796875"
     inkscape:cx="312.64368"
     inkscape:cy="183.90805"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="M 62,0.90575477 C 56.763,2.0827548 46.22,6.6857548 39.924,10.542755 c -3.066,1.878 -7.116,3.665 -9,3.971 C 27.856,15.011755 26.72,14.431755 20,8.9437548 9.074,0.01975477 5.841,-0.21724523 3.042,7.6997548 1.732,11.404755 1.767,12.618755 3.379,19.606755 c 4.197,18.195 4.179,16.256 0.182,19.917 L 0,42.786755 v 10.403 10.403 l 5.375,10.952 c 6.85,13.957 8.081,19.418 6.536,28.995995 -1.698,10.525 -1.236,11.49 7.323,15.3 9.248,4.117 10.413,5.211 11.21,10.526 0.788,5.253 5.329,11.836 9.736,14.115 2.362,1.222 5.499,1.623 11.77,1.505 11.412,-0.215 15.081,-1.114 16.984,-4.161 0.861,-1.379 2.466,-3.947 3.566,-5.706 2.481,-3.969 3.993,-4.593 7.25,-2.988 3.658,1.803 5.805,9.917 5.472,20.686 -0.285,9.253 1.571,17.567 4.996,22.378 1.117,1.567 3.057,5.627 4.312,9.022 4.438,12.005 10.403,26.9 12.54,31.317 3.312,6.84 9.135,13.631 15.067,17.572 7.234,4.806 8.313,6.16 12.373,15.531 3.487,8.046 8.821,18.036 12.33,23.095 2.26,3.257 14.16,28.843 14.16,30.444 0,0.635 2.463,6.117 5.474,12.183 4.323,8.712 5.611,12.428 6.128,17.687 1.059,10.756 0.257,12.852 -8.759,22.896 -6.241,6.953 -8.083,9.684 -8.197,12.151 -0.213,4.63 2.372,5.519 16.55,5.692 6.636,0.081 12.506,0.419 13.044,0.751 0.538,0.333 7.77,0.527 16.073,0.432 14.367,-0.165 18.504,-0.948 17.09,-3.237 -0.316,-0.512 -0.142,-1.473 0.387,-2.137 0.529,-0.663 1.186,-4.581 1.461,-8.706 0.309,-4.637 1.725,-11.127 3.707,-17 3.379,-10.008 3.301,-9.072 3.001,-36 -0.088,-7.815 0.425,-12.546 2.003,-18.5 1.167,-4.4 2.789,-12.699 3.605,-18.442 0.816,-5.743 1.694,-10.653 1.952,-10.911 0.258,-0.257 1.355,0.334 2.438,1.314 1.084,0.981 6.033,2.616 10.998,3.635 5.199,1.066 15.289,4.449 23.787,7.974 29.224,12.125 29.502,12.205 40.46,11.576 6.903,-0.396 10.846,-1.14 13.667,-2.579 2.181,-1.113 7.265,-2.524 11.298,-3.137 4.033,-0.612 9.358,-2.021 11.833,-3.13 7.902,-3.541 14.243,-4.776 24.585,-4.788 7.507,-0.009 11.712,-0.546 16.451,-2.102 8.079,-2.652 21.096,-9.151 27.098,-13.53 2.549,-1.859 4.883,-3.38 5.187,-3.38 0.568,0 4.459,7.868 9.14,18.478 2.686,6.088 7.785,29.193 9.318,42.221 1.418,12.049 -2.259,21.405 -12.572,31.986 -6.74,6.916 -8.158,7.512 -18.258,7.671 l -9.077,0.144 -4.997,5.24 c -4.427,4.642 -4.962,5.667 -4.686,8.992 0.538,6.497 2.068,6.795 33.836,6.592 35.536,-0.227 41.865,-1.485 50.257,-9.991 6.502,-6.589 14.594,-17.549 18.27,-24.743 1.941,-3.8 5.254,-8.975 7.361,-11.5 9.018,-10.804 10.082,-15.82 5.189,-24.468 -1.594,-2.817 -4.181,-8.947 -5.75,-13.622 -2.565,-7.644 -2.842,-9.758 -2.754,-21 0.068,-8.59 0.638,-14.377 1.823,-18.5 1.882,-6.546 5.732,-25.616 7.571,-37.5 1.579,-10.202 3.08,-16.068 4.799,-18.753 0.794,-1.239 2.432,-5.514 3.641,-9.5 2.064,-6.802 2.484,-7.403 6.848,-9.789 9.939,-5.435 12.738,-9.838 12.847,-20.207 0.074,-7.099 0.103,-7.178 1.367,-3.751 2.323,6.294 4.364,14.371 5.433,21.5 1.496,9.967 6.603,63.598 8.618,90.5 0.703,9.383 5.91,33.404 9.868,45.524 3.328,10.188 9.628,20.679 16.402,27.312 10.048,9.838 26.331,14.961 38.685,12.172 12.043,-2.718 12.75,-11.965 0.921,-12.039 -11.45,-0.072 -19.229,-1.786 -25.177,-5.55 -6.919,-4.377 -11.244,-8.296 -11.244,-10.188 0,-0.767 -1.129,-4.665 -2.508,-8.662 -7.049,-20.423 -6.672,-16.432 -7.568,-80.069 -0.45,-31.9 -1.238,-62.05 -1.751,-67 -1.315,-12.662 -4.026,-27.039 -6.114,-32.424 -0.976,-2.517 -2.073,-6.513 -2.437,-8.881 -1.276,-8.289 -4.157,-12.399 -16.651,-23.762995 -12.255,-11.146 -15.43,-13.478 -24.971,-18.339 -5.62,-2.864 -35.687,-12.014 -46.5,-14.151 -3.3,-0.653 -8.7,-2.063 -12,-3.135 -8.545,-2.774 -26.562,-4.737 -44,-4.792 -8.25,-0.026 -26.7,-0.71 -41,-1.52 -30.201,-1.71 -76.013,-1.938 -89,-0.443 -16.653,1.917 -34.907,2.635 -49.154,1.934 l -14.154,-0.696 -14.128,-7.187 c -7.771,-3.954 -16.252,-8.538 -18.846,-10.188 -6.111,-3.885 -20.169,-8.15 -37.718,-11.441 -7.7,-1.444 -15.687,-3.042 -17.75,-3.55 -11.561,-2.849 -11.934,-3.006 -11.211,-4.739 0.387,-0.927 0.922,-3.73 1.19,-6.23 0.414,-3.8760002 0.089,-5.0180002 -2.21,-7.7500002 -2.288,-2.719 -3.369,-3.205 -7.13,-3.205 -3.782,0 -5.071,0.587 -8.77,3.997 -5.266,4.8540002 -8.905,5.7550002 -14.188,3.512 -4.111,-1.745 -25.707,-9.59400003 -25.849,-9.39400003 -0.045,0.063 -1.657,0.469 -3.582,0.902"
     stroke="none"
     fill="#402c12"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
