<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="360.20834"
   height="161.44043"
   viewBox="0 0 360.20834 161.44043"
   version="1.1"
   id="svg1"
   sodipodi:docname="Janenschia_Robusta-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.1693548"
     inkscape:cx="177.44828"
     inkscape:cy="62.427586"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 15.015546,0.39007676 c -0.33,0.535 -2.228,1.23700004 -4.218,1.55900004 -4.6339995,0.752 -10.0429995,4.87 -10.6639995,8.1190002 -0.764,4.001 1.836,6.86 5.602,6.16 1.901,-0.353 4.256,0.005 5.9949995,0.911 1.576,0.821 4.387,1.493 6.247,1.493 2.483,0 4.449,0.963 7.391,3.62 3.427,3.097 14.348,18.727 24.289,34.763 3.836,6.188 15.761,18.775 24.063,25.4 l 6.891,5.498 -0.581,4.904 c -0.708,5.982 0.217,8.594003 5.184,14.640003 5.658,6.886 8.133,15.553 5.997,20.995 -1.905,4.853 -4.845,18.236 -4.845,22.052 0,2.06 -0.661,4.619 -1.468,5.687 -2.851,3.769 -1.974,4.557 4.718,4.239 l 6.25,-0.298 0.27,-6.5 c 0.223,-5.351 1.058,-8.102 4.727004,-15.565 2.452,-4.986 4.841,-10.836 5.31,-13 l 0.853,-3.935 0.749,3.247 c 0.752,3.26 -0.213,7.706 -3.032,13.982 -3.063,6.818 -3.964,10.971 -3.585,16.521 0.365,5.333 0.571,5.75 2.85,5.75 2.561,0 8.358,-2.57 8.358,-3.705 0,-0.359 -0.506,-2.053 -1.125,-3.764 -1.229,-3.398 -1.058,-3.869 6.527,-17.997 3.041,-5.666 3.619,-7.607 3.097,-10.393 l -0.643,-3.426 3.822,0.631 c 2.102,0.348 6.976,0.637 10.831,0.643 l 7.009,0.011 1.742,7.75 c 3.02,13.444 2.014,24.25 -2.26,24.25 -1.435,0 -4.056,3.1 -3.45,4.081 0.881,1.425 15.025,1.137 16.234,-0.331 0.566,-0.687 1.796,-6.2 2.733,-12.25 2.747,-17.729 2.123,-16.766 6.19,-9.549 1.964,3.485 3.784,8.23 4.045,10.543 0.417,3.697 0.09,4.599 -2.706,7.459 -1.862,1.905 -2.945,3.867 -2.613,4.732 0.312,0.813 0.567,1.662 0.567,1.886 0,0.879 14.582,-0.891 15.878,-1.927 2.13,-1.702 0.621,-20.698 -2.5,-31.467 -1.701,-5.872 -2.144,-8.755 -1.382,-9.009 0.615,-0.205 3.113,-2.099 5.55,-4.207 3.124,-2.704 5.756,-4.034 8.929,-4.509 5.327,-0.799 29.097,0.015 42.525,1.456 5.915,0.635 25.54,0.789 52,0.408 49.082,-0.708 52.606,-0.325 67.776,7.351 4.707,2.383 8.749,4.141 8.982,3.908 1.49,-1.49 -17.28,-12.254 -25.258,-14.486 -6.684,-1.869 -24.023,-3.912 -43,-5.066 -30.022,-1.825 -45.911,-5.146003 -70.565,-14.745003 -31.803,-12.384 -37.051,-14.489 -44.123,-17.697 -3.129,-1.42 -6.589,-2.581 -7.691,-2.581 -1.102,0 -2.263,-0.421 -2.582,-0.936 -0.318,-0.515 -1.357,-0.907 -2.309,-0.87 -2.379,0.092 -6.936,-0.894 -8.446,-1.827 -1.453,-0.899 -1.324,-0.873 -13.991,-2.831 -5.982,-0.924 -18.646,-1.604 -33,-1.771 l -23.293004,-0.27 -5,-2.858 c -6.263,-3.58 -12.396,-8.269 -15,-11.47 -1.1,-1.352 -2.567,-2.955 -3.26,-3.562 -5.066,-4.443 -10.261,-9.605 -9.665,-9.605 0.394,0 -0.461,-1.092 -1.901,-2.426 -1.721,-1.596 -2.199,-2.596 -1.396,-2.921 0.676,-0.274 0.413,-0.53 -0.587,-0.574 -0.995,-0.043 -1.531,-0.529 -1.191,-1.079 0.34,-0.55 -0.159,-1 -1.108,-1 -0.949,0 -1.462,-0.263 -1.141,-0.585 0.675,-0.674 -1.034,-2.925 -7.001,-9.221 -2.337,-2.466 -4.25,-5.0940002 -4.25,-5.8390002 0,-0.745 -0.702,-1.355 -1.559,-1.355 -0.857,0 -1.311,-0.402 -1.007,-0.893 0.304,-0.492 -0.57,-1.175 -1.941,-1.519 -1.371,-0.345 -2.493,-1.068 -2.493,-1.607 0,-0.54 -1.139,-0.981 -2.531,-0.981 -1.393,0 -2.795,-0.686 -3.117,-1.526 -0.386,-1.00600004 -0.971,-1.20500004 -1.719,-0.58500004 -1.682,1.39700004 -2.821,1.42500004 -3.646,0.09 -0.448,-0.726 -0.972,-0.812 -1.338,-0.221"
     stroke="none"
     fill="#393d45"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
