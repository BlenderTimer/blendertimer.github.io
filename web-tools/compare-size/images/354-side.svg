<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="728.91656"
   height="222.03717"
   viewBox="0 0 728.91656 222.03717"
   version="1.1"
   id="svg1"
   sodipodi:docname="Plateosaurus_Trossingensis-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="0.58232932"
     inkscape:cx="361.47931"
     inkscape:cy="104.75172"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 292.80655,0.42212502 c -5.935,0.70199998 -14.17,2.52399998 -22.418,4.96099998 -1.65,0.488 -10.875,1.395 -20.5,2.017 -20.188,1.303 -30.671,2.972 -44,7.004 -18.27,5.526 -25.306,6.839 -42.377,7.907 -21.364,1.336 -38.107,-0.336 -60.623,-6.053 -44.651002,-11.338 -51.891002,-11.627 -69.198002,-2.755 -2.034,1.042 -4.758,1.895 -6.053,1.895 -1.295,0 -4.131,1.285 -6.302,2.856 -2.171,1.571 -6.197,3.673 -8.947,4.67 -6.3680004,2.309 -7.8860004,3.636 -10.4860004,9.167 -2.65299998,5.646 -2.50199998,13.601 0.269,14.128 1.855,0.352 21.0600004,-7.31 28.4670004,-11.358 2.337,-1.277 4.25,-1.988 4.25,-1.58 0,1.739 -6.336,6.571 -13.698,10.447 -4.529,2.383 -9.528,5.962 -11.6690004,8.354 -3.65,4.077 -3.693,4.213 -1.659,5.302 1.734,0.928 3.4790004,0.449 10.3070004,-2.83 4.8,-2.305 11.131,-4.43 15.219,-5.108 3.85,-0.638 10.6,-2.289 15,-3.668 4.4,-1.379 11.6,-2.754 16,-3.054 8.296,-0.567 9.585,-0.293 56.591002,12.018 3.076,0.805 7.801,2.401 10.5,3.547 4.698,1.994 34.223,10.554 45.105,13.078 2.858,0.663 8.092,2.742 11.63,4.621 4.915,2.61 6.72,4.183 7.645,6.663 0.666,1.786 1.603,4.243 2.082,5.459 1.215,3.089 8.957,8.593 18.697,13.290005 4.767,2.3 8.25,4.598 8.25,5.444 0,0.806 -1.174,3.173 -2.608,5.26 -1.435,2.087 -4.731,8.301 -7.326,13.81 -5.575,11.839 -9.178,16.258 -15.774,19.347 -5.847,2.739 -10.624,10.017 -10.105,15.396 l 0.313,3.241 1.5,-2.908 c 0.825,-1.599 2.175,-3.21 3,-3.579 0.825,-0.37 3.481,-1.701 5.902,-2.96 4.023,-2.091 4.334,-2.127 3.609,-0.42 -1.313,3.089 -1.772,7.19 -1.104,9.854 0.726,2.893 2.593,3.397 2.593,0.7 0,-0.997 1.259,-3.019 2.799,-4.494 l 2.798,-2.681 -0.383,3.279 c -0.264,2.259 0.255,4.046 1.668,5.744 1.973,2.37 2.053,2.384 2.085,0.364 0.018,-1.155 0.51,-3.469 1.093,-5.141 0.805,-2.311 1.525,-2.918 3,-2.532 1.469,0.384 1.94,-0.007 1.94,-1.609 0,-1.165 0.563,-2.004 1.25,-1.867 0.904,0.181 1.331,-2.103 1.541,-8.25 0.29,-8.488 0.297,-8.507 4.558,-13 9.55,-10.069 14.651,-17.887 14.651,-22.45 0,-2.684 0.923,-3.227 2.611,-1.539 0.557,0.557 4.241,1.907 8.188,3 5.973,1.656 10.319,1.992 25.938,2.005 18.699,0.017 18.805,0.005 31.007,-3.627 9.986,-2.971 12.522,-3.413 13.75,-2.394 0.828,0.688 1.506,1.88 1.506,2.65 0,0.77 1.76,4.9 3.911,9.178 2.151,4.278 5.052,10.587 6.447,14.02 3.095,7.616 10.233,17.315 16.119,21.901 7.335,5.714 11.3,11.625 12.102,18.039 1.254,10.038 -1.91,21.286 -7.492,26.633 -3.008,2.883 -11.675,5.486 -18.469,5.548 -4.908,0.045 -10.011,3.157 -11.645,7.1 -1.521,3.673 -0.067,6.089 2.422,4.023 0.814,-0.675 3.31,-1.358 5.549,-1.517 3.317,-0.237 3.862,-0.041 2.951,1.057 -1.644,1.98 -0.29,4.759 1.863,3.826 1.824,-0.79 3.321,-0.957 19.966,-2.223 5.623,-0.428 10.752,-1.306 11.397,-1.951 0.645,-0.645 1.743,-4.009 2.44,-7.476 0.697,-3.467 2.687,-9.678 4.421,-13.803 3.49,-8.299 8.015,-25.674 8.017,-30.785 0,-1.807 -0.638,-4.282 -1.418,-5.5 -2.34,-3.652 -7.397,-12.769 -11.215,-20.215 -1.973,-3.85 -4.243,-7.744 -5.044,-8.652 -1.29,-1.465 -1.029,-2.635 2.297,-10.291 3.092,-7.119 4.331,-8.914 7.043,-10.201 3.009,-1.428 6.539,-4.972 11.838,-11.886005 1.533,-1.999 3.986,-3.107 10.5,-4.74 7.714,-1.933 10.857,-2.109 34,-1.907 29.143,0.255 49.502,-1.427 64.815,-5.354 5.327,-1.366 14.185,-2.939 19.685,-3.495 5.5,-0.556 13.375,-1.448 17.5,-1.982 4.125,-0.535 12.675,-1.241 19,-1.57 6.325,-0.33 15.037,-1.234 19.36,-2.01 4.324,-0.777 12.424,-1.415 18,-1.419 9.067,-0.006 17.433,-0.987 33.14,-3.883 4.777,-0.881 10.933,-2.462 27.5,-7.061 4.125,-1.145 10.2,-2.716 13.5,-3.49 19.068,-4.471 44.583,-13.116 52.549,-17.804 4.098,-2.411 8.239,-4.678 9.201,-5.038 1.771,-0.662 2.506,-4.717 0.855,-4.717 -1.9,0 -14.714,4.245 -16.771,5.556 -2.952,1.881 -21.149,6.444 -30.334,7.606 -25.836,3.268 -100.799,1.47 -148.5,-3.562 -8.25,-0.871 -19.146,-2 -24.214,-2.51 -5.068,-0.51 -9.622,-1.18 -10.122,-1.488 -0.499,-0.309 -5.127,-1.252 -10.286,-2.096 -8.374,-1.369 -19.161,-3.28 -35.878,-6.354 -3.025,-0.556 -10.9,-2.437 -17.5,-4.179 -6.6,-1.742 -18.3,-4.725 -26,-6.628 -7.7,-1.904 -18.5,-4.748 -24,-6.321 -11.143,-3.187 -28.354,-7.162 -39,-9.007 -3.85,-0.668 -9.164,-1.828 -11.809,-2.579 -7.753,-2.20099998 -30.96,-3.57499998 -40.773,-2.41399998"
     stroke="none"
     fill="#292928"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
