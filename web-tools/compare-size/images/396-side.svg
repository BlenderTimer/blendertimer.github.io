<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="341.9567"
   height="200.79385"
   viewBox="0 0 341.9567 200.79385"
   version="1.1"
   id="svg1"
   sodipodi:docname="Platybelodon_Danovi-side.svg"
   inkscape:version="1.3 (0e150ed, 2023-07-21)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs1" />
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#ffffff"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="1"
     inkscape:deskcolor="#505050"
     inkscape:zoom="1.0023041"
     inkscape:cx="175.09655"
     inkscape:cy="97.774713"
     inkscape:current-layer="svg1" />
  <script
     type="application/ecmascript"
     id="script1">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){&quot;object&quot;==typeof response&amp;&amp;&quot;object&quot;==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:&quot;text/html&quot;,useXMLparser:!1},{mime:&quot;application/xhtml+xml&quot;,useXMLparser:!0},{mime:&quot;text/xml&quot;,useXMLparser:!0},{mime:&quot;application/xml&quot;,useXMLparser:!0},{mime:&quot;image/svg+xml&quot;,useXMLparser:!0}];let typeEl=args.find((arg=&gt;&quot;object&quot;==typeof arg&amp;&amp;&quot;string&quot;==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;&quot;string&quot;==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(&quot;&quot;),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName(&quot;parsererror&quot;).length){if(&quot;image/svg+xml&quot;===typeEl.type){const scriptElem=xmlDoc.createElementNS(&quot;http://www.w3.org/2000/svg&quot;,&quot;script&quot;);scriptElem.setAttributeNS(null,&quot;type&quot;,&quot;application/ecmascript&quot;),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML(&quot;afterbegin&quot;,injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),&quot;undefined&quot;!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage(&quot;fgddmllnllkalaagkghckoinaemmogpe&quot;,{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script>
  <path
     d="m 153,1.3933803 c -23.577,4.544 -36.087,6.527 -47.417,7.516 -7.682,0.671 -14.166,1.7669997 -16,2.7049997 -4.416,2.258 -30.158,28.936 -33.179,34.386 -1.644,2.965 -5.228,6.653 -10.143,10.436 -8.598,6.619 -12.363,10.528 -20.332,21.113 C 9.087,99.92338 0,124.99738 0,149.10138 c 0,10.166 0.248,11.86 2.073,14.18 1.685,2.143 2.905,2.635 6.531,2.635 5.336,0 6.13,-1.296 4.464,-7.285 -0.939,-3.375 -0.866,-6.101 0.365,-13.675 1.969,-12.111 4.908,-17.981 13.026,-26.011 6.295,-6.228 6.541,-6.366 6.541,-3.667 0,4.007 1.947,2.858 4.082,-2.408 l 1.806,-4.454 0.056,6.191 c 0.055,6.063 1.25,8.852 2.451,5.721 0.333,-0.866 0.605,-2.603 0.605,-3.859 0,-1.256 0.833,-3.356 1.851,-4.668 1.018,-1.312 2.03,-2.942 2.25,-3.624 0.932,-2.892 17.71,-20.783 18.628,-19.865 0.221,0.221 -0.914,3.035 -2.523,6.253 -1.609,3.218 -4.174,9.676 -5.699,14.351 -1.526,4.675 -3.247,9.096 -3.825,9.825 -1.577,1.988 -19.504,13.616 -24.894,16.147 -4.528,2.126 -6.918,5.383 -5.137,7.001 0.467,0.424 4.032,1.05 7.922,1.39 6.75,0.59 7.433,0.443 15,-3.222 10.336,-5.007 22.179,-14.02 32.573,-24.789 13.211,-13.688 13.815,-14.157 24.291,-18.861 8.884,-3.99 10.111,-4.305 11.579,-2.977 0.903,0.817 2.348,1.486 3.211,1.486 3.712,0 9.805,4.82 13.963,11.046 l 4.31,6.454 0.12,16.5 c 0.131,17.925 2.469,40.404 5.072,48.757 1.801,5.783 1.324,7.68 -3.417,13.57 -2.632,3.269 -2.94,6.876 -0.745,8.698 1.958,1.624 41.296,0.734 46.22,-1.046 2.861,-1.034 3.249,-1.612 3.245,-4.827 -0.003,-2.009 -1.578,-7.876 -3.5,-13.038 -4.168,-11.194 -4.6,-19.665 -1.562,-30.634 1.064,-3.839 2.239,-9.285 2.612,-12.102 0.373,-2.817 1.029,-5.688 1.456,-6.38 0.596,-0.963 4.854,-0.05 18.139,3.889 9.548,2.831 20.06,5.587 23.36,6.125 7.187,1.17 21.371,1.216 27.195,0.089 4.006,-0.776 4.443,-0.605 9.715,3.793 5.083,4.241 5.8,5.384 9.055,14.431 4.981,13.843 4.668,19.343 -1.5,26.368 -2.178,2.481 -2.965,4.389 -2.965,7.192 v 3.815 l 12.75,1.157 c 15.54,1.411 29.746,1.483 32.211,0.164 3.324,-1.779 4.129,-6.415 2.91,-16.752 -1.702,-14.434 -0.779,-23.223 3.443,-32.769 1.945,-4.4 5.033,-12.683 6.86,-18.406 3.277,-10.263 3.332,-10.353 4.017,-6.5 1.542,8.678 0.927,13.677 -2.19,17.795 -2.555,3.377 -2.88,4.521 -2.464,8.694 0.263,2.643 1.046,6.518 1.739,8.611 1.255,3.786 1.289,3.806 6.609,3.757 4.054,-0.037 5.683,-0.507 6.731,-1.941 2.726,-3.727 1.089,-12.02 -3.05,-15.455 -2.172,-1.802 -2.106,-18.154 0.118,-29.195 1.162,-5.773 1.681,-13.31 1.675,-24.36 -0.008,-14.775 -0.221,-16.651 -2.786,-24.5 -10.994,-33.64 -33.705,-51.911 -64.615,-51.983 -10.235,-0.023 -43.82,-6.0929997 -63.906,-11.5489997 -16.437,-4.465 -16.458,-4.468 -32.5,-4.356 -8.829,0.062 -18.977,0.676 -22.552,1.365"
     stroke="none"
     fill="#4c4842"
     fill-rule="evenodd"
     id="path1"
     style="fill:#ffffff;fill-opacity:1" />
</svg>
